!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS_ADDR	spim/CPU/parser.y	/^ABS_ADDR:	Y_INT$/;"	l
ADDR	spim/CPU/parser.y	/^ADDR:		'(' REGISTER ')'$/;"	l
ADDRESS	spim/CPU/parser.y	/^ADDRESS:	{only_id = 1;} ADDR {only_id = 0; $$ = $2;}$/;"	l
ARITH_OVFL	spim/CPU/run.c	88;"	d	file:
ARRAY_ID	header.h	/^    ARRAY_ID, \/\/ID_NODE->child = dim$/;"	e	enum:IDENTIFIER_KIND
ARRAY_SIZE_NEGATIVE	semanticAnalysis.c	/^    ARRAY_SIZE_NEGATIVE,$/;"	e	enum:ErrorMsgKind	file:
ARRAY_SIZE_NOT_INT	semanticAnalysis.c	/^    ARRAY_SIZE_NOT_INT,$/;"	e	enum:ErrorMsgKind	file:
ARRAY_SUBSCRIPT_NOT_INT	semanticAnalysis.c	/^    ARRAY_SUBSCRIPT_NOT_INT,$/;"	e	enum:ErrorMsgKind	file:
ARRAY_TYPE_DESCRIPTOR	symbolTable.h	/^    ARRAY_TYPE_DESCRIPTOR,$/;"	e	enum:TypeDescriptorKind
ASM_CMD	spim/spim/spim.c	/^  ASM_CMD,$/;"	e	enum:__anon1	file:
ASM_CODE	spim/CPU/parser.y	/^ASM_CODE:	LOAD_OPS	DEST	ADDRESS$/;"	l
ASM_DIR	spim/CPU/op.h	37;"	d
ASM_DIRECTIVE	spim/CPU/parser.y	/^ASM_DIRECTIVE:	Y_ALIAS_DIR	Y_REG	Y_REG$/;"	l
ASSIGN_STMT	header.h	/^    ASSIGN_STMT, \/\/TODO:for simpler implementation, assign_expr also uses this$/;"	e	enum:STMT_KIND
AST_NODE	header.h	/^class AST_NODE {$/;"	c
AST_TYPE	header.h	/^typedef enum AST_TYPE$/;"	g
AST_TYPE	header.h	/^} AST_TYPE;$/;"	t	typeref:enum:AST_TYPE
AST_TYPE_string	functions.c	/^const char *AST_TYPE_string[] = {"PROGRAM", "GLOBAL_DECL_LIST", "GLOBAL_DECL", "DECL_LIST", "FUNCTION_DECL", "PARAM_LIST", "PARAM", "DIM_FN", "DIMFN1", "EXPR_NULL", "BLOCK", "DECL", "TYPE_DECL", "VAR_DECL",$/;"	v
Allocate	alloc.c	/^AST_NODE *Allocate(AST_TYPE type){$/;"	f
ArrayProperties	symbolTable.h	/^typedef struct ArrayProperties$/;"	s
ArrayProperties	symbolTable.h	/^} ArrayProperties;$/;"	t	typeref:struct:ArrayProperties
B1_TYPE_INST	spim/CPU/op.h	41;"	d
B2_TYPE_INST	spim/CPU/op.h	45;"	d
BASE	spim/CPU/inst.h	126;"	d
BC_TYPE_INST	spim/CPU/op.h	40;"	d
BEGIN	lex.yy.c	125;"	d	file:
BF_OPS_REV2	spim/CPU/parser.y	/^BF_OPS_REV2:	Y_EXT_OP$/;"	l
BINARYIR_OPS	spim/CPU/parser.y	/^BINARYIR_OPS:	Y_SLLV_OP$/;"	l
BINARYI_OPS	spim/CPU/parser.y	/^BINARYI_OPS:	Y_ADD_OP$/;"	l
BINARYI_TRAP_OPS	spim/CPU/parser.y	/^BINARYI_TRAP_OPS:	Y_TEQI_OP$/;"	l
BINARY_ARITHI_OPS	spim/CPU/parser.y	/^BINARY_ARITHI_OPS:	Y_ADDI_OP$/;"	l
BINARY_BR_OPS	spim/CPU/parser.y	/^BINARY_BR_OPS:	Y_BEQ_OP$/;"	l
BINARY_LOGICALI_OPS	spim/CPU/parser.y	/^BINARY_LOGICALI_OPS:	Y_ANDI_OP$/;"	l
BINARY_OPERATION	header.h	/^    BINARY_OPERATION,$/;"	e	enum:EXPR_KIND
BINARY_OPERATOR	header.h	/^typedef enum BINARY_OPERATOR$/;"	g
BINARY_OPERATOR	header.h	/^} BINARY_OPERATOR;$/;"	t	typeref:enum:BINARY_OPERATOR
BINARY_OPS	spim/CPU/parser.y	/^BINARY_OPS:	Y_NOR_OP$/;"	l
BINARY_OPS_REV2	spim/CPU/parser.y	/^BINARY_OPS_REV2:	Y_RDHWR_OP$/;"	l
BINARY_OP_ADD	header.h	/^    BINARY_OP_ADD,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_AND	header.h	/^    BINARY_OP_AND,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_DIV	header.h	/^    BINARY_OP_DIV,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_EQ	header.h	/^    BINARY_OP_EQ,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_GE	header.h	/^    BINARY_OP_GE,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_GT	header.h	/^    BINARY_OP_GT,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_LE	header.h	/^    BINARY_OP_LE,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_LT	header.h	/^    BINARY_OP_LT,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_MUL	header.h	/^    BINARY_OP_MUL,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_NE	header.h	/^    BINARY_OP_NE,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_OR	header.h	/^    BINARY_OP_OR$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_SUB	header.h	/^    BINARY_OP_SUB,$/;"	e	enum:BINARY_OPERATOR
BINARY_TRAP_OPS	spim/CPU/parser.y	/^BINARY_TRAP_OPS:	Y_TEQ_OP$/;"	l
BIN_BASE	spim/CPU/inst.h	225;"	d
BIN_DIR	spim/spim/Makefile	/^BIN_DIR = $(HOME)\/spim\/bin$/;"	m
BIN_FD	spim/CPU/inst.h	228;"	d
BIN_FS	spim/CPU/inst.h	227;"	d
BIN_FT	spim/CPU/inst.h	226;"	d
BIN_RD	spim/CPU/inst.h	222;"	d
BIN_REG	spim/CPU/inst.h	219;"	d
BIN_RS	spim/CPU/inst.h	220;"	d
BIN_RT	spim/CPU/inst.h	221;"	d
BIN_SA	spim/CPU/inst.h	223;"	d
BLOCK_NODE	header.h	/^    BLOCK_NODE,$/;"	e	enum:AST_TYPE
BRANCH_INST	spim/CPU/run.c	107;"	d	file:
BR_COP_OPS	spim/CPU/parser.y	/^BR_COP_OPS:	Y_BC1F_OP$/;"	l
BR_GE_POPS	spim/CPU/parser.y	/^BR_GE_POPS:	Y_BGE_POP$/;"	l
BR_GT_POPS	spim/CPU/parser.y	/^BR_GT_POPS:	Y_BGT_POP$/;"	l
BR_IMM32	spim/CPU/parser.y	/^BR_IMM32:	{only_id = 1;} IMM32 {only_id = 0; $$ = $2;}$/;"	l
BR_LE_POPS	spim/CPU/parser.y	/^BR_LE_POPS:	Y_BLE_POP$/;"	l
BR_LT_POPS	spim/CPU/parser.y	/^BR_LT_POPS:	Y_BLT_POP$/;"	l
BYTES_PER_LINE	spim/CPU/display-utils.c	215;"	d	file:
BYTES_PER_WORD	spim/CPU/spim.h	102;"	d
BYTES_TO_INST	spim/CPU/mem.c	117;"	d	file:
BYTE_TYPE	spim/CPU/mem.h	67;"	d
B_OPS	spim/CPU/parser.y	/^B_OPS:	Y_B_POP$/;"	l
CACHE_OPS	spim/CPU/parser.y	/^CACHE_OPS:	Y_CACHE_OP$/;"	l
CC	Makefile	/^CC = g++ -g -Wall$/;"	m
CC	spim/CPU/inst.h	137;"	d
CC	spim/spim/Makefile	/^CC = g++$/;"	m
CCR	spim/CPU/mem.c	/^reg_word CCR[4][32], CPR[4][32];$/;"	v
CC_REG	spim/CPU/parser.y	/^CC_REG:	       Y_INT$/;"	l
CLEAR_INTERRUPT	spim/CPU/inst.h	186;"	d
CLOSE_SYSCALL	spim/CPU/spim-syscall.h	50;"	d
CLOSE_SYSCALL	spim/CPU/syscall.h	59;"	d
CMD	spim/CPU/parser.y	/^CMD:		ASM_CODE$/;"	l
COND	spim/CPU/inst.h	134;"	d
COND_EQ	spim/CPU/inst.h	156;"	d
COND_IN	spim/CPU/inst.h	158;"	d
COND_LT	spim/CPU/inst.h	157;"	d
COND_UN	spim/CPU/inst.h	155;"	d
CONST	parser.tab.c	/^    CONST = 259,$/;"	e	enum:yytokentype	file:
CONST	parser.tab.h	/^    CONST = 259,$/;"	e	enum:yytokentype
CONST_STRING_TYPE	header.h	/^    CONST_STRING_TYPE,\/\/for "const string"$/;"	e	enum:DATA_TYPE
CONST_VALUE_NODE	header.h	/^    CONST_VALUE_NODE, \/\/ex:1, 2, "constant string"$/;"	e	enum:AST_TYPE
CONTINUE_CMD	spim/spim/spim.c	/^  CONTINUE_CMD,$/;"	e	enum:__anon1	file:
CON_Type	header.h	/^typedef struct CON_Type{$/;"	s
CON_Type	header.h	/^} CON_Type;$/;"	t	typeref:struct:CON_Type
COP_REG	spim/CPU/parser.y	/^COP_REG:	Y_REG$/;"	l
COUNT_LEADING_OPS	spim/CPU/parser.y	/^COUNT_LEADING_OPS:	Y_CLO_OP$/;"	l
CP0_BadVAddr	spim/CPU/reg.h	84;"	d
CP0_BadVAddr_Reg	spim/CPU/reg.h	83;"	d
CP0_Cause	spim/CPU/reg.h	119;"	d
CP0_Cause_BD	spim/CPU/reg.h	121;"	d
CP0_Cause_ExcCode	spim/CPU/reg.h	131;"	d
CP0_Cause_IP	spim/CPU/reg.h	122;"	d
CP0_Cause_IP0	spim/CPU/reg.h	130;"	d
CP0_Cause_IP1	spim/CPU/reg.h	129;"	d
CP0_Cause_IP2	spim/CPU/reg.h	128;"	d
CP0_Cause_IP3	spim/CPU/reg.h	127;"	d
CP0_Cause_IP4	spim/CPU/reg.h	126;"	d
CP0_Cause_IP5	spim/CPU/reg.h	125;"	d
CP0_Cause_IP6	spim/CPU/reg.h	124;"	d
CP0_Cause_IP7	spim/CPU/reg.h	123;"	d
CP0_Cause_Mask	spim/CPU/reg.h	132;"	d
CP0_Cause_Reg	spim/CPU/reg.h	118;"	d
CP0_Compare	spim/CPU/reg.h	92;"	d
CP0_Compare_Reg	spim/CPU/reg.h	91;"	d
CP0_Config	spim/CPU/reg.h	149;"	d
CP0_Config_AR	spim/CPU/reg.h	153;"	d
CP0_Config_AT	spim/CPU/reg.h	152;"	d
CP0_Config_BE	spim/CPU/reg.h	151;"	d
CP0_Config_MT	spim/CPU/reg.h	154;"	d
CP0_Config_Mask	spim/CPU/reg.h	155;"	d
CP0_Config_Reg	spim/CPU/reg.h	148;"	d
CP0_Count	spim/CPU/reg.h	88;"	d
CP0_Count_Reg	spim/CPU/reg.h	87;"	d
CP0_EPC	spim/CPU/reg.h	145;"	d
CP0_EPC_Reg	spim/CPU/reg.h	144;"	d
CP0_ExCode	spim/CPU/reg.h	141;"	d
CP0_Status	spim/CPU/reg.h	96;"	d
CP0_Status_CU	spim/CPU/reg.h	98;"	d
CP0_Status_EXL	spim/CPU/reg.h	109;"	d
CP0_Status_IE	spim/CPU/reg.h	110;"	d
CP0_Status_IM	spim/CPU/reg.h	99;"	d
CP0_Status_IM0	spim/CPU/reg.h	107;"	d
CP0_Status_IM1	spim/CPU/reg.h	106;"	d
CP0_Status_IM2	spim/CPU/reg.h	105;"	d
CP0_Status_IM3	spim/CPU/reg.h	104;"	d
CP0_Status_IM4	spim/CPU/reg.h	103;"	d
CP0_Status_IM5	spim/CPU/reg.h	102;"	d
CP0_Status_IM6	spim/CPU/reg.h	101;"	d
CP0_Status_IM7	spim/CPU/reg.h	100;"	d
CP0_Status_Mask	spim/CPU/reg.h	111;"	d
CP0_Status_Reg	spim/CPU/reg.h	95;"	d
CP0_Status_UM	spim/CPU/reg.h	108;"	d
CPR	spim/CPU/mem.c	/^reg_word CCR[4][32], CPR[4][32];$/;"	v
CPU_DIR	spim/spim/Makefile	/^CPU_DIR = ..\/CPU$/;"	m
CSH	spim/spim/Makefile	/^CSH = bash$/;"	m
CTL_COP_OPS	spim/CPU/parser.y	/^CTL_COP_OPS:	Y_CFC0_OP$/;"	l
C_type	header.h	/^typedef enum C_type {$/;"	g
C_type	header.h	/^} C_type;$/;"	t	typeref:enum:C_type
Char	header.h	/^    char* Char() {$/;"	f	struct:CON_Type
CodeGenStream	codeGen.c	/^void CodeGenStream(const char *format, ...){$/;"	f
DATA	gen-part.cpp	/^const char* DATA= ".data";$/;"	v
DATA_BOT	spim/CPU/mem.h	72;"	d
DATA_LIMIT	spim/CPU/spim.h	132;"	d
DATA_PC	spim/CPU/data.c	57;"	d	file:
DATA_SIZE	spim/CPU/spim.h	126;"	d
DATA_TYPE	header.h	/^typedef enum DATA_TYPE$/;"	g
DATA_TYPE	header.h	/^} DATA_TYPE;$/;"	t	typeref:enum:DATA_TYPE
DEBUG	Makefile	/^DEBUG = 1$/;"	m
DECLARATION_NODE	header.h	/^    DECLARATION_NODE,$/;"	e	enum:AST_TYPE
DECLSemanticValue	header.h	/^typedef struct DECLSemanticValue$/;"	s
DECLSemanticValue	header.h	/^} DECLSemanticValue;$/;"	t	typeref:struct:DECLSemanticValue
DECL_KIND	header.h	/^typedef enum DECL_KIND$/;"	g
DECL_KIND	header.h	/^} DECL_KIND;$/;"	t	typeref:enum:DECL_KIND
DEFAULT_RUN_LOCATION	spim/CPU/spim.h	164;"	d
DEFAULT_RUN_STEPS	spim/CPU/spim.h	174;"	d
DEFINES	spim/spim/Makefile	/^DEFINES = $(MEM_SIZES) -DDEFAULT_EXCEPTION_HANDLER="\\"$(EXCEPTION_DIR)\/exceptions.s\\""$/;"	m
DELETE_BKPT_CMD	spim/spim/spim.c	/^  DELETE_BKPT_CMD,$/;"	e	enum:__anon1	file:
DEST	spim/CPU/parser.y	/^DEST:		REGISTER ;$/;"	l
DIRECT_MAPPED	spim/CPU/spim.h	191;"	d
DIV_POPS	spim/CPU/parser.y	/^DIV_POPS:	Y_DIV_OP$/;"	l
DOC_DIR	spim/spim/Makefile	/^DOC_DIR = ..\/Documentation$/;"	m
DO_DELAYED_UPDATE	spim/CPU/run.c	168;"	d	file:
DUMPNATIVE_TEXT_CMD	spim/spim/spim.c	/^  DUMPNATIVE_TEXT_CMD,$/;"	e	enum:__anon1	file:
DUMP_TEXT_CMD	spim/spim/spim.c	/^  DUMP_TEXT_CMD$/;"	e	enum:__anon1	file:
DebugInfo	codeGen.c	/^void DebugInfo(AST_NODE *node, const char *format, ...){$/;"	f
Double	header.h	/^    double Double() {$/;"	f	struct:CON_Type
ECHO	lex.yy.c	619;"	d	file:
ELSE	parser.tab.c	/^    ELSE = 264,$/;"	e	enum:yytokentype	file:
ELSE	parser.tab.h	/^    ELSE = 264,$/;"	e	enum:yytokentype
ENCODING	spim/CPU/inst.h	145;"	d
END_OF_TRAP_HANDLER_SYMBOL	spim/CPU/spim.h	169;"	d
EOB_ACT_CONTINUE_SCAN	lex.yy.c	168;"	d	file:
EOB_ACT_END_OF_FILE	lex.yy.c	169;"	d	file:
EOB_ACT_LAST_MATCH	lex.yy.c	170;"	d	file:
ERROR	parser.tab.c	/^    ERROR = 291,$/;"	e	enum:yytokentype	file:
ERROR	parser.tab.h	/^    ERROR = 291,$/;"	e	enum:yytokentype
ERROR_TYPE	header.h	/^    ERROR_TYPE$/;"	e	enum:DATA_TYPE
EXCEPTION_ADDR	spim/CPU/spim.h	180;"	d
EXCEPTION_ADDR	spim/CPU/spim.h	183;"	d
EXCEPTION_DIR	spim/spim/Makefile	/^EXCEPTION_DIR = $(HOME)\/spim\/share\/spim$/;"	m
EXCESSIVE_ARRAY_DIM_DECLARATION	semanticAnalysis.c	/^    EXCESSIVE_ARRAY_DIM_DECLARATION,$/;"	e	enum:ErrorMsgKind	file:
EXIT2_SYSCALL	spim/CPU/spim-syscall.h	52;"	d
EXIT2_SYSCALL	spim/CPU/syscall.h	61;"	d
EXIT_CMD	spim/spim/spim.c	/^  EXIT_CMD,$/;"	e	enum:__anon1	file:
EXIT_SUCCESS	parser.tab.c	412;"	d	file:
EXIT_SUCCESS	parser.tab.c	440;"	d	file:
EXIT_SYSCALL	spim/CPU/spim-syscall.h	43;"	d
EXIT_SYSCALL	spim/CPU/syscall.h	51;"	d
EXPR	spim/CPU/inst.h	148;"	d
EXPR	spim/CPU/parser.y	/^EXPR:$/;"	l
EXPRESSION	spim/CPU/parser.y	/^EXPRESSION:	{only_id = 1;} EXPR {only_id = 0; $$ = $2;}$/;"	l
EXPRSemanticValue	header.h	/^typedef struct EXPRSemanticValue$/;"	s
EXPRSemanticValue	header.h	/^} EXPRSemanticValue;$/;"	t	typeref:struct:EXPRSemanticValue
EXPR_KIND	header.h	/^typedef enum EXPR_KIND$/;"	g
EXPR_KIND	header.h	/^} EXPR_KIND;$/;"	t	typeref:enum:EXPR_KIND
EXPR_LST	spim/CPU/parser.y	/^EXPR_LST:	EXPR_LST	EXPRESSION$/;"	l
EXPR_NODE	header.h	/^    EXPR_NODE,$/;"	e	enum:AST_TYPE
ErrorMsgKind	semanticAnalysis.c	/^typedef enum ErrorMsgKind$/;"	g	file:
ErrorMsgKind	semanticAnalysis.c	/^} ErrorMsgKind;$/;"	t	typeref:enum:ErrorMsgKind	file:
ExcCode_AdEL	spim/CPU/inst.h	198;"	d
ExcCode_AdES	spim/CPU/inst.h	199;"	d
ExcCode_Bp	spim/CPU/inst.h	203;"	d
ExcCode_C2E	spim/CPU/inst.h	209;"	d
ExcCode_CacheErr	spim/CPU/inst.h	213;"	d
ExcCode_CpU	spim/CPU/inst.h	205;"	d
ExcCode_DBE	spim/CPU/inst.h	201;"	d
ExcCode_FPE	spim/CPU/inst.h	208;"	d
ExcCode_IBE	spim/CPU/inst.h	200;"	d
ExcCode_Int	spim/CPU/inst.h	194;"	d
ExcCode_MCheck	spim/CPU/inst.h	212;"	d
ExcCode_MDMX	spim/CPU/inst.h	210;"	d
ExcCode_Mod	spim/CPU/inst.h	195;"	d
ExcCode_Ov	spim/CPU/inst.h	206;"	d
ExcCode_RI	spim/CPU/inst.h	204;"	d
ExcCode_Sys	spim/CPU/inst.h	202;"	d
ExcCode_TLBL	spim/CPU/inst.h	196;"	d
ExcCode_TLBS	spim/CPU/inst.h	197;"	d
ExcCode_Tr	spim/CPU/inst.h	207;"	d
ExcCode_WATCH	spim/CPU/inst.h	211;"	d
FACTOR	spim/CPU/parser.y	/^FACTOR:         Y_INT$/;"	l
FCCR	spim/CPU/reg.h	209;"	d
FCCR_FCC	spim/CPU/reg.h	211;"	d
FCCR_MASK	spim/CPU/reg.h	212;"	d
FCCR_REG	spim/CPU/reg.h	208;"	d
FCR	spim/CPU/reg.h	197;"	d
FCSR	spim/CPU/reg.h	223;"	d
FCSR_Cause_E	spim/CPU/reg.h	228;"	d
FCSR_Cause_I	spim/CPU/reg.h	233;"	d
FCSR_Cause_O	spim/CPU/reg.h	231;"	d
FCSR_Cause_U	spim/CPU/reg.h	232;"	d
FCSR_Cause_V	spim/CPU/reg.h	229;"	d
FCSR_Cause_Z	spim/CPU/reg.h	230;"	d
FCSR_Enable_I	spim/CPU/reg.h	239;"	d
FCSR_Enable_O	spim/CPU/reg.h	237;"	d
FCSR_Enable_U	spim/CPU/reg.h	238;"	d
FCSR_Enable_V	spim/CPU/reg.h	235;"	d
FCSR_Enable_Z	spim/CPU/reg.h	236;"	d
FCSR_FCC	spim/CPU/reg.h	225;"	d
FCSR_Flag_I	spim/CPU/reg.h	245;"	d
FCSR_Flag_O	spim/CPU/reg.h	243;"	d
FCSR_Flag_U	spim/CPU/reg.h	244;"	d
FCSR_Flag_V	spim/CPU/reg.h	241;"	d
FCSR_Flag_Z	spim/CPU/reg.h	242;"	d
FCSR_MASK	spim/CPU/reg.h	226;"	d
FCSR_REG	spim/CPU/reg.h	222;"	d
FD	spim/CPU/inst.h	115;"	d
FENR	spim/CPU/reg.h	219;"	d
FENR_REG	spim/CPU/reg.h	218;"	d
FEXR	spim/CPU/reg.h	215;"	d
FEXR_REG	spim/CPU/reg.h	214;"	d
FGR	spim/CPU/mem.c	/^float *FGR;			\/* is possible *\/$/;"	v
FGR_LENGTH	spim/CPU/reg.h	169;"	d
FIR	spim/CPU/reg.h	201;"	d
FIR_D	spim/CPU/reg.h	204;"	d
FIR_MASK	spim/CPU/reg.h	206;"	d
FIR_REG	spim/CPU/reg.h	200;"	d
FIR_S	spim/CPU/reg.h	205;"	d
FIR_W	spim/CPU/reg.h	203;"	d
FLEXINT_H	lex.yy.c	29;"	d	file:
FLEX_BETA	lex.yy.c	13;"	d	file:
FLEX_SCANNER	lex.yy.c	8;"	d	file:
FLOAT	parser.tab.c	/^    FLOAT = 262,$/;"	e	enum:yytokentype	file:
FLOAT	parser.tab.h	/^    FLOAT = 262,$/;"	e	enum:yytokentype
FLOAT	pattern/assign.c	/^typedef float FLOAT;$/;"	t	file:
FLOATA	pattern/assign.c	/^typedef float FLOATA[2];$/;"	t	file:
FLOATC	header.h	/^    FLOATC,$/;"	e	enum:C_type
FLOAT_PTR_TYPE	header.h	/^    FLOAT_PTR_TYPE,\/\/for parameter passing$/;"	e	enum:DATA_TYPE
FLOAT_TYPE	header.h	/^    FLOAT_TYPE,$/;"	e	enum:DATA_TYPE
FOR	parser.tab.c	/^    FOR = 266,$/;"	e	enum:yytokentype	file:
FOR	parser.tab.h	/^    FOR = 266,$/;"	e	enum:yytokentype
FOR_STMT	header.h	/^    FOR_STMT,$/;"	e	enum:STMT_KIND
FPR	spim/CPU/mem.c	/^double *FPR;			\/* Dynamically allocate so overlay *\/$/;"	v
FPR_D	spim/CPU/reg.h	179;"	d
FPR_LENGTH	spim/CPU/reg.h	170;"	d
FPR_S	spim/CPU/reg.h	177;"	d
FPR_W	spim/CPU/reg.h	183;"	d
FP_BINARY_OPS	spim/CPU/parser.y	/^FP_BINARY_OPS:	Y_ADD_S_OP$/;"	l
FP_BINARY_OPS_REV2	spim/CPU/parser.y	/^FP_BINARY_OPS_REV2:	Y_ADD_PS_OP$/;"	l
FP_CMP_OPS	spim/CPU/parser.y	/^FP_CMP_OPS:	Y_C_F_S_OP$/;"	l
FP_CMP_OPS_REV2	spim/CPU/parser.y	/^FP_CMP_OPS_REV2:	Y_C_EQ_PS_OP$/;"	l
FP_CMP_TYPE_INST	spim/CPU/op.h	60;"	d
FP_EXPR_LST	spim/CPU/parser.y	/^FP_EXPR_LST:	FP_EXPR_LST Y_FP$/;"	l
FP_I2a_TYPE_INST	spim/CPU/op.h	57;"	d
FP_MOVC_TYPE_INST	spim/CPU/op.h	63;"	d
FP_MOVECC_OPS	spim/CPU/parser.y	/^FP_MOVECC_OPS:	Y_MOVF_D_OP$/;"	l
FP_MOVECC_OPS_REV2	spim/CPU/parser.y	/^FP_MOVECC_OPS_REV2:	Y_MOVF_PS_OP$/;"	l
FP_MOVEC_OPS	spim/CPU/parser.y	/^FP_MOVEC_OPS:	Y_MOVN_D_OP$/;"	l
FP_MOVEC_OPS_REV2	spim/CPU/parser.y	/^FP_MOVEC_OPS_REV2:	Y_MOVN_PS_OP$/;"	l
FP_MOVE_OPS	spim/CPU/parser.y	/^FP_MOVE_OPS:	Y_MOV_S_OP$/;"	l
FP_MOVE_OPS_REV2	spim/CPU/parser.y	/^FP_MOVE_OPS_REV2:	Y_MOV_PS_OP$/;"	l
FP_R2ds_TYPE_INST	spim/CPU/op.h	58;"	d
FP_R2ts_TYPE_INST	spim/CPU/op.h	59;"	d
FP_R3_TYPE_INST	spim/CPU/op.h	61;"	d
FP_R4_TYPE_INST	spim/CPU/op.h	62;"	d
FP_REGISTER	spim/CPU/parser.y	/^FP_REGISTER:	Y_FP_REG$/;"	l
FP_TERNARY_OPS_REV2	spim/CPU/parser.y	/^FP_TERNARY_OPS_REV2:	Y_ALNV_PS_OP$/;"	l
FP_UNARY_OPS	spim/CPU/parser.y	/^FP_UNARY_OPS:		Y_ABS_S_OP$/;"	l
FP_UNARY_OPS_REV2	spim/CPU/parser.y	/^FP_UNARY_OPS_REV2:	Y_ABS_PS_OP$/;"	l
FS	spim/CPU/inst.h	109;"	d
FT	spim/CPU/inst.h	112;"	d
FUNCTION_CALL_STMT	header.h	/^    FUNCTION_CALL_STMT,$/;"	e	enum:STMT_KIND
FUNCTION_DECL	header.h	/^    FUNCTION_DECL,$/;"	e	enum:DECL_KIND
FUNCTION_PARAMETER_DECL	header.h	/^    FUNCTION_PARAMETER_DECL$/;"	e	enum:DECL_KIND
FUNCTION_SIGNATURE	symbolTable.h	/^    FUNCTION_SIGNATURE$/;"	e	enum:SymbolAttributeKind
FWR	spim/CPU/mem.c	/^int *FWR;			\/* is possible *\/$/;"	v
F_DEST	spim/CPU/parser.y	/^F_DEST:		FP_REGISTER ;$/;"	l
F_SRC1	spim/CPU/parser.y	/^F_SRC1:		FP_REGISTER ;$/;"	l
F_SRC2	spim/CPU/parser.y	/^F_SRC2:		FP_REGISTER ;$/;"	l
FunctionSignature	symbolTable.h	/^typedef struct FunctionSignature$/;"	s
FunctionSignature	symbolTable.h	/^} FunctionSignature;$/;"	t	typeref:struct:FunctionSignature
Function_End	codeGen.h	/^  Function_Start, Function_End$/;"	e	enum:TagSignal
Function_Start	codeGen.h	/^  Function_Start, Function_End$/;"	e	enum:TagSignal
HASH	symbolTable.c	/^int HASH(char * str) {$/;"	f
HASHBITS	spim/CPU/sym-tbl.c	65;"	d	file:
HASH_TABLE_SIZE	symbolTable.h	13;"	d
HELP_CMD	spim/spim/spim.c	/^  HELP_CMD,$/;"	e	enum:__anon1	file:
HI	spim/CPU/mem.c	/^reg_word HI, LO;$/;"	v
HI_present	spim/CPU/mem.c	/^int HI_present, LO_present;$/;"	v
I1s_TYPE_INST	spim/CPU/op.h	42;"	d
I1t_TYPE_INST	spim/CPU/op.h	43;"	d
I2_TYPE_INST	spim/CPU/op.h	44;"	d
I2a_TYPE_INST	spim/CPU/op.h	46;"	d
ID	parser.tab.c	/^    ID = 258,$/;"	e	enum:yytokentype	file:
ID	parser.tab.h	/^    ID = 258,$/;"	e	enum:yytokentype
ID	spim/CPU/parser.y	/^ID:		{only_id = 1;} Y_ID {only_id = 0; $$ = $2;}$/;"	l
IDENTIFIER_KIND	header.h	/^typedef enum IDENTIFIER_KIND$/;"	g
IDENTIFIER_KIND	header.h	/^} IDENTIFIER_KIND;$/;"	t	typeref:enum:IDENTIFIER_KIND
IDENTIFIER_NODE	header.h	/^    IDENTIFIER_NODE,$/;"	e	enum:AST_TYPE
IDISP	spim/CPU/inst.h	131;"	d
IF	codeGen.h	/^      IF, IF_Cascade$/;"	e	enum:TagSystem::tagState
IF	parser.tab.c	/^    IF = 263,$/;"	e	enum:yytokentype	file:
IF	parser.tab.h	/^    IF = 263,$/;"	e	enum:yytokentype
IF_Cascade	codeGen.h	/^      IF, IF_Cascade$/;"	e	enum:TagSystem::tagState
IF_Cascade	codeGen.h	/^  IF_Start, IF_Cascade, IF_End,$/;"	e	enum:TagSignal
IF_End	codeGen.h	/^  IF_Start, IF_Cascade, IF_End,$/;"	e	enum:TagSignal
IF_STMT	header.h	/^    IF_STMT,$/;"	e	enum:STMT_KIND
IF_Start	codeGen.h	/^  IF_Start, IF_Cascade, IF_End,$/;"	e	enum:TagSignal
IMM	spim/CPU/inst.h	122;"	d
IMM16	spim/CPU/parser.y	/^IMM16:	IMM32$/;"	l
IMM32	spim/CPU/parser.y	/^IMM32:		ABS_ADDR$/;"	l
IMM_MAX	spim/CPU/inst.h	162;"	d
IMM_MIN	spim/CPU/inst.h	161;"	d
INCOMPATIBLE_ARRAY_DIMENSION	semanticAnalysis.c	/^    INCOMPATIBLE_ARRAY_DIMENSION,$/;"	e	enum:ErrorMsgKind	file:
INITIAL	lex.yy.c	527;"	d	file:
INST_PC	spim/CPU/inst.c	85;"	d	file:
INT	parser.tab.c	/^    INT = 261,$/;"	e	enum:yytokentype	file:
INT	parser.tab.h	/^    INT = 261,$/;"	e	enum:yytokentype
INT	pattern/assign.c	/^typedef int INT;$/;"	t	file:
INT16_MAX	lex.yy.c	71;"	d	file:
INT16_MIN	lex.yy.c	62;"	d	file:
INT32_MAX	lex.yy.c	74;"	d	file:
INT32_MIN	lex.yy.c	65;"	d	file:
INT8_MAX	lex.yy.c	68;"	d	file:
INT8_MIN	lex.yy.c	59;"	d	file:
INTA	pattern/assign.c	/^typedef int INTA[2];$/;"	t	file:
INTEGERC	header.h	/^    INTEGERC,$/;"	e	enum:C_type
INT_PTR_TYPE	header.h	/^    INT_PTR_TYPE,\/\/for parameter passing$/;"	e	enum:DATA_TYPE
INT_TYPE	header.h	/^    INT_TYPE,$/;"	e	enum:DATA_TYPE
IOFFSET	spim/CPU/inst.h	129;"	d
IO_INTERVAL	spim/CPU/spim.h	200;"	d
IS_FUNCTION_NOT_VARIABLE	semanticAnalysis.c	/^    IS_FUNCTION_NOT_VARIABLE,$/;"	e	enum:ErrorMsgKind	file:
IS_TYPE_NOT_VARIABLE	semanticAnalysis.c	/^    IS_TYPE_NOT_VARIABLE,$/;"	e	enum:ErrorMsgKind	file:
IdentifierSemanticValue	header.h	/^typedef struct IdentifierSemanticValue$/;"	s
IdentifierSemanticValue	header.h	/^} IdentifierSemanticValue;$/;"	t	typeref:struct:IdentifierSemanticValue
Int	header.h	/^    int Int() {$/;"	f	struct:CON_Type
JUMP_INST	spim/CPU/run.c	128;"	d	file:
J_OPS	spim/CPU/parser.y	/^J_OPS:	Y_J_OP$/;"	l
J_TYPE_INST	spim/CPU/op.h	66;"	d
K	spim/CPU/spim.h	94;"	d
K_DATA_BOT	spim/CPU/mem.h	111;"	d
K_DATA_LIMIT	spim/CPU/spim.h	144;"	d
K_DATA_SIZE	spim/CPU/spim.h	138;"	d
K_TEXT_BOT	spim/CPU/mem.h	98;"	d
K_TEXT_SIZE	spim/CPU/spim.h	116;"	d
LABEL	spim/CPU/parser.y	/^LABEL:		ID$/;"	l
LABEL_HASH_TABLE_SIZE	spim/CPU/sym-tbl.c	67;"	d	file:
LBL_CMD	spim/CPU/parser.y	/^LBL_CMD:	OPT_LBL CMD$/;"	l
LEX	Makefile	/^LEX = flex$/;"	m
LIBS	Makefile	/^LIBS = -lfl $/;"	m
LINE	spim/CPU/parser.y	/^LINE:		{parse_error_occurred = false; scanner_start_line (); } LBL_CMD ;$/;"	l
LIST_BKPT_CMD	spim/spim/spim.c	/^  LIST_BKPT_CMD,$/;"	e	enum:__anon1	file:
LO	spim/CPU/mem.c	/^reg_word HI, LO;$/;"	v
LOADC_OPS	spim/CPU/parser.y	/^LOADC_OPS:	Y_LDC2_OP$/;"	l
LOADFP_INDEX_OPS	spim/CPU/parser.y	/^LOADFP_INDEX_OPS:	Y_LDXC1_OP$/;"	l
LOADFP_OPS	spim/CPU/parser.y	/^LOADFP_OPS:	Y_LDC1_OP$/;"	l
LOADI_OPS	spim/CPU/parser.y	/^LOADI_OPS:	Y_LUI_OP$/;"	l
LOAD_INST	spim/CPU/run.c	148;"	d	file:
LOAD_INST_BASE	spim/CPU/run.c	154;"	d	file:
LOAD_OPS	spim/CPU/parser.y	/^LOAD_OPS:	Y_LB_OP$/;"	l
LO_present	spim/CPU/mem.c	/^int HI_present, LO_present;$/;"	v
MAN_DIR	spim/spim/Makefile	/^MAN_DIR = $(HOME)\/spim\/share\/man\/man1$/;"	m
MAX	spim/CPU/spim.h	71;"	d
MAX	spim/CPU/spim.h	74;"	d
MAX_ARGS	spim/CPU/spim-utils.c	222;"	d	file:
MAX_ARRAY_DIMENSION	header.h	5;"	d
MEM_SIZES	spim/spim/Makefile	/^MEM_SIZES = -DTEXT_SIZE=65536 -DDATA_SIZE=131072 -DK_TEXT_SIZE=65536$/;"	m
MIN	spim/CPU/spim.h	68;"	d
MIN	spim/CPU/spim.h	73;"	d
MK_COMMA	parser.tab.c	/^    MK_COMMA = 288,$/;"	e	enum:yytokentype	file:
MK_COMMA	parser.tab.h	/^    MK_COMMA = 288,$/;"	e	enum:yytokentype
MK_DOT	parser.tab.c	/^    MK_DOT = 290,$/;"	e	enum:yytokentype	file:
MK_DOT	parser.tab.h	/^    MK_DOT = 290,$/;"	e	enum:yytokentype
MK_LB	parser.tab.c	/^    MK_LB = 282,$/;"	e	enum:yytokentype	file:
MK_LB	parser.tab.h	/^    MK_LB = 282,$/;"	e	enum:yytokentype
MK_LBRACE	parser.tab.c	/^    MK_LBRACE = 286,$/;"	e	enum:yytokentype	file:
MK_LBRACE	parser.tab.h	/^    MK_LBRACE = 286,$/;"	e	enum:yytokentype
MK_LPAREN	parser.tab.c	/^    MK_LPAREN = 284,$/;"	e	enum:yytokentype	file:
MK_LPAREN	parser.tab.h	/^    MK_LPAREN = 284,$/;"	e	enum:yytokentype
MK_RB	parser.tab.c	/^    MK_RB = 283,$/;"	e	enum:yytokentype	file:
MK_RB	parser.tab.h	/^    MK_RB = 283,$/;"	e	enum:yytokentype
MK_RBRACE	parser.tab.c	/^    MK_RBRACE = 287,$/;"	e	enum:yytokentype	file:
MK_RBRACE	parser.tab.h	/^    MK_RBRACE = 287,$/;"	e	enum:yytokentype
MK_RPAREN	parser.tab.c	/^    MK_RPAREN = 285,$/;"	e	enum:yytokentype	file:
MK_RPAREN	parser.tab.h	/^    MK_RPAREN = 285,$/;"	e	enum:yytokentype
MK_SEMICOLON	parser.tab.c	/^    MK_SEMICOLON = 289,$/;"	e	enum:yytokentype	file:
MK_SEMICOLON	parser.tab.h	/^    MK_SEMICOLON = 289,$/;"	e	enum:yytokentype
MM_IO_BOT	spim/CPU/mem.h	117;"	d
MM_IO_TOP	spim/CPU/mem.h	118;"	d
MOVC_TYPE_INST	spim/CPU/op.h	64;"	d
MOVECC_OPS	spim/CPU/parser.y	/^MOVECC_OPS:	Y_MOVF_OP$/;"	l
MOVEC_OPS	spim/CPU/parser.y	/^MOVEC_OPS:	Y_MOVN_OP$/;"	l
MOVE_COP_OPS	spim/CPU/parser.y	/^MOVE_COP_OPS:	Y_MFC0_OP$/;"	l
MOVE_COP_OPS_REV2	spim/CPU/parser.y	/^MOVE_COP_OPS_REV2:	Y_MFHC1_OP$/;"	l
MOVE_FROM_HILO_OPS	spim/CPU/parser.y	/^MOVE_FROM_HILO_OPS:	Y_MFHI_OP$/;"	l
MOVE_TO_HILO_OPS	spim/CPU/parser.y	/^MOVE_TO_HILO_OPS:	Y_MTHI_OP$/;"	l
MULT_OPS	spim/CPU/parser.y	/^MULT_OPS:	Y_MULT_OP$/;"	l
MULT_OPS3	spim/CPU/parser.y	/^MULT_OPS3: Y_MUL_OP$/;"	l
MUL_POPS	spim/CPU/parser.y	/^MUL_POPS:	Y_MULO_POP$/;"	l
MYLEX	spim/spim/Makefile	/^MYLEX = flex$/;"	m
NBBY	spim/spim/spim.c	54;"	d	file:
ND	spim/CPU/inst.h	138;"	d
NOARG_TYPE_INST	spim/CPU/op.h	67;"	d
NONEMPTY_ASSIGN_EXPR_LIST_NODE	header.h	/^    NONEMPTY_ASSIGN_EXPR_LIST_NODE,$/;"	e	enum:AST_TYPE
NONEMPTY_RELOP_EXPR_LIST_NODE	header.h	/^    NONEMPTY_RELOP_EXPR_LIST_NODE$/;"	e	enum:AST_TYPE
NONE_TYPE	header.h	/^    NONE_TYPE,\/\/for nodes like PROGRAM_NODE which has no type$/;"	e	enum:DATA_TYPE
NOP_CMD	spim/spim/spim.c	/^  NOP_CMD,$/;"	e	enum:__anon1	file:
NORMAL_ID	header.h	/^    NORMAL_ID, \/\/function Name, uninitialized scalar variable$/;"	e	enum:IDENTIFIER_KIND
NOT_ARRAY	semanticAnalysis.c	/^    NOT_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
NOT_ASSIGNABLE	semanticAnalysis.c	/^    NOT_ASSIGNABLE,$/;"	e	enum:ErrorMsgKind	file:
NOT_FUNCTION_NAME	semanticAnalysis.c	/^    NOT_FUNCTION_NAME,$/;"	e	enum:ErrorMsgKind	file:
NULL	spim/CPU/spim.h	35;"	d
NULLARY_OPS	spim/CPU/parser.y	/^NULLARY_OPS:	Y_ERET_OP$/;"	l
NULLARY_OPS_REV2	spim/CPU/parser.y	/^NULLARY_OPS_REV2:	Y_DERET_OP$/;"	l
NUL_NODE	header.h	/^    NUL_NODE,$/;"	e	enum:AST_TYPE
NaN	spim/CPU/run.c	38;"	d	file:
OBJECT	Makefile	/^OBJECT = parser.tab.c parser.tab.o lex.yy.c alloc.o functions.o semanticAnalysis.o symbolTable.o codeGen.o$/;"	m
OBJS	spim/spim/Makefile	/^OBJS = spim.o spim-utils.o run.o mem.o inst.o data.o sym-tbl.o parser_yacc.o lex.yy.o \\$/;"	m
OP	spim/CPU/dump_ops.c	55;"	d	file:
OP	spim/CPU/inst.c	1245;"	d	file:
OP	spim/CPU/inst.c	1246;"	d	file:
OP	spim/CPU/inst.c	1426;"	d	file:
OP	spim/CPU/inst.c	1427;"	d	file:
OP	spim/CPU/inst.c	623;"	d	file:
OP	spim/CPU/inst.c	624;"	d	file:
OPCODE	spim/CPU/inst.h	95;"	d
OPEN_SYSCALL	spim/CPU/spim-syscall.h	47;"	d
OPEN_SYSCALL	spim/CPU/syscall.h	56;"	d
OPTIONAL_ID	spim/CPU/parser.y	/^OPTIONAL_ID:	{only_id = 1;} OPT_ID {only_id = 0; $$ = $2;}$/;"	l
OPT_ID	spim/CPU/parser.y	/^OPT_ID:		ID$/;"	l
OPT_LBL	spim/CPU/parser.y	/^OPT_LBL: ID ':' {$/;"	l
OP_AND	parser.tab.c	/^    OP_AND = 270,$/;"	e	enum:yytokentype	file:
OP_AND	parser.tab.h	/^    OP_AND = 270,$/;"	e	enum:yytokentype
OP_ASSIGN	parser.tab.c	/^    OP_ASSIGN = 268,$/;"	e	enum:yytokentype	file:
OP_ASSIGN	parser.tab.h	/^    OP_ASSIGN = 268,$/;"	e	enum:yytokentype
OP_DIVIDE	parser.tab.c	/^    OP_DIVIDE = 281,$/;"	e	enum:yytokentype	file:
OP_DIVIDE	parser.tab.h	/^    OP_DIVIDE = 281,$/;"	e	enum:yytokentype
OP_EQ	parser.tab.c	/^    OP_EQ = 272,$/;"	e	enum:yytokentype	file:
OP_EQ	parser.tab.h	/^    OP_EQ = 272,$/;"	e	enum:yytokentype
OP_GE	parser.tab.c	/^    OP_GE = 276,$/;"	e	enum:yytokentype	file:
OP_GE	parser.tab.h	/^    OP_GE = 276,$/;"	e	enum:yytokentype
OP_GT	parser.tab.c	/^    OP_GT = 274,$/;"	e	enum:yytokentype	file:
OP_GT	parser.tab.h	/^    OP_GT = 274,$/;"	e	enum:yytokentype
OP_LE	parser.tab.c	/^    OP_LE = 277,$/;"	e	enum:yytokentype	file:
OP_LE	parser.tab.h	/^    OP_LE = 277,$/;"	e	enum:yytokentype
OP_LT	parser.tab.c	/^    OP_LT = 275,$/;"	e	enum:yytokentype	file:
OP_LT	parser.tab.h	/^    OP_LT = 275,$/;"	e	enum:yytokentype
OP_MINUS	parser.tab.c	/^    OP_MINUS = 279,$/;"	e	enum:yytokentype	file:
OP_MINUS	parser.tab.h	/^    OP_MINUS = 279,$/;"	e	enum:yytokentype
OP_NE	parser.tab.c	/^    OP_NE = 273,$/;"	e	enum:yytokentype	file:
OP_NE	parser.tab.h	/^    OP_NE = 273,$/;"	e	enum:yytokentype
OP_NOT	parser.tab.c	/^    OP_NOT = 271,$/;"	e	enum:yytokentype	file:
OP_NOT	parser.tab.h	/^    OP_NOT = 271,$/;"	e	enum:yytokentype
OP_OR	parser.tab.c	/^    OP_OR = 269,$/;"	e	enum:yytokentype	file:
OP_OR	parser.tab.h	/^    OP_OR = 269,$/;"	e	enum:yytokentype
OP_PLUS	parser.tab.c	/^    OP_PLUS = 278,$/;"	e	enum:yytokentype	file:
OP_PLUS	parser.tab.h	/^    OP_PLUS = 278,$/;"	e	enum:yytokentype
OP_TIMES	parser.tab.c	/^    OP_TIMES = 280,$/;"	e	enum:yytokentype	file:
OP_TIMES	parser.tab.h	/^    OP_TIMES = 280,$/;"	e	enum:yytokentype
OUTPUT	Makefile	/^OUTPUT = parser.output parser.tab.h$/;"	m
PARAMETER_TYPE_UNMATCH	semanticAnalysis.c	/^    PARAMETER_TYPE_UNMATCH,$/;"	e	enum:ErrorMsgKind	file:
PARAM_LIST_NODE	header.h	/^    PARAM_LIST_NODE,$/;"	e	enum:AST_TYPE
PASS_ARRAY_TO_SCALAR	semanticAnalysis.c	/^    PASS_ARRAY_TO_SCALAR,$/;"	e	enum:ErrorMsgKind	file:
PASS_SCALAR_TO_ARRAY	semanticAnalysis.c	/^    PASS_SCALAR_TO_ARRAY$/;"	e	enum:ErrorMsgKind	file:
PC	spim/CPU/mem.c	/^mem_addr PC, nPC;$/;"	v
PREFETCH_OPS	spim/CPU/parser.y	/^PREFETCH_OPS:	Y_PREFX_OP$/;"	l
PRINT_ALL_REGS_CMD	spim/spim/spim.c	/^  PRINT_ALL_REGS_CMD,$/;"	e	enum:__anon1	file:
PRINT_CHARACTER_SYSCALL	spim/CPU/spim-syscall.h	44;"	d
PRINT_CHARACTER_SYSCALL	spim/CPU/syscall.h	53;"	d
PRINT_CMD	spim/spim/spim.c	/^  PRINT_CMD,$/;"	e	enum:__anon1	file:
PRINT_DOUBLE_SYSCALL	spim/CPU/spim-syscall.h	36;"	d
PRINT_DOUBLE_SYSCALL	spim/CPU/syscall.h	41;"	d
PRINT_FLOAT_SYSCALL	spim/CPU/spim-syscall.h	35;"	d
PRINT_FLOAT_SYSCALL	spim/CPU/syscall.h	40;"	d
PRINT_INT_SYSCALL	spim/CPU/spim-syscall.h	34;"	d
PRINT_INT_SYSCALL	spim/CPU/syscall.h	39;"	d
PRINT_STRING_SYSCALL	spim/CPU/spim-syscall.h	37;"	d
PRINT_STRING_SYSCALL	spim/CPU/syscall.h	42;"	d
PRINT_SYM_CMD	spim/spim/spim.c	/^  PRINT_SYM_CMD,$/;"	e	enum:__anon1	file:
PROGRAM_NODE	header.h	/^    PROGRAM_NODE,$/;"	e	enum:AST_TYPE
PSEUDO_OP	spim/CPU/op.h	38;"	d
Parameter	symbolTable.h	/^typedef struct Parameter$/;"	s
Parameter	symbolTable.h	/^} Parameter;$/;"	t	typeref:struct:Parameter
QSORT_FUNC	spim/CPU/spim.h	90;"	d
R	spim/CPU/mem.c	/^reg_word R[R_LENGTH];$/;"	v
R1d_TYPE_INST	spim/CPU/op.h	49;"	d
R1s_TYPE_INST	spim/CPU/op.h	48;"	d
R2ds_TYPE_INST	spim/CPU/op.h	51;"	d
R2sh_TYPE_INST	spim/CPU/op.h	53;"	d
R2st_TYPE_INST	spim/CPU/op.h	50;"	d
R2td_TYPE_INST	spim/CPU/op.h	52;"	d
R3_TYPE_INST	spim/CPU/op.h	54;"	d
R3sh_TYPE_INST	spim/CPU/op.h	55;"	d
RAISE_EXCEPTION	spim/CPU/inst.h	173;"	d
RAISE_INTERRUPT	spim/CPU/inst.h	180;"	d
RD	spim/CPU/inst.h	105;"	d
READ_CHARACTER_SYSCALL	spim/CPU/spim-syscall.h	45;"	d
READ_CHARACTER_SYSCALL	spim/CPU/syscall.h	54;"	d
READ_CMD	spim/spim/spim.c	/^  READ_CMD,$/;"	e	enum:__anon1	file:
READ_DOUBLE_SYSCALL	spim/CPU/spim-syscall.h	40;"	d
READ_DOUBLE_SYSCALL	spim/CPU/syscall.h	46;"	d
READ_FLOAT_SYSCALL	spim/CPU/spim-syscall.h	39;"	d
READ_FLOAT_SYSCALL	spim/CPU/syscall.h	45;"	d
READ_INT_SYSCALL	spim/CPU/spim-syscall.h	38;"	d
READ_INT_SYSCALL	spim/CPU/syscall.h	44;"	d
READ_STRING_SYSCALL	spim/CPU/spim-syscall.h	41;"	d
READ_STRING_SYSCALL	spim/CPU/syscall.h	47;"	d
READ_SYSCALL	spim/CPU/spim-syscall.h	48;"	d
READ_SYSCALL	spim/CPU/syscall.h	57;"	d
RECV_BUFFER_ADDR	spim/CPU/mem.h	123;"	d
RECV_CTRL_ADDR	spim/CPU/mem.h	122;"	d
RECV_INTERVAL	spim/CPU/spim.h	206;"	d
RECV_INT_ENABLE	spim/CPU/mem.h	126;"	d
RECV_INT_LEVEL	spim/CPU/mem.h	128;"	d
RECV_READY	spim/CPU/mem.h	125;"	d
REDO_CMD	spim/spim/spim.c	/^  REDO_CMD,$/;"	e	enum:__anon1	file:
REG	spim/CPU/parser.y	/^REG:		REGISTER ;$/;"	l
REGISTER	spim/CPU/parser.y	/^REGISTER:	Y_REG$/;"	l
REGS	spim/CPU/inst.c	1263;"	d	file:
REG_A0	spim/CPU/reg.h	52;"	d
REG_A1	spim/CPU/reg.h	53;"	d
REG_A2	spim/CPU/reg.h	54;"	d
REG_A3	spim/CPU/reg.h	55;"	d
REG_FA0	spim/CPU/reg.h	56;"	d
REG_FRES	spim/CPU/reg.h	63;"	d
REG_GP	spim/CPU/reg.h	68;"	d
REG_RES	spim/CPU/reg.h	62;"	d
REG_SP	spim/CPU/reg.h	57;"	d
REG_V0	spim/CPU/reg.h	51;"	d
REINITIALIZE_CMD	spim/spim/spim.c	/^  REINITIALIZE_CMD,$/;"	e	enum:__anon1	file:
REJECT	lex.yy.c	517;"	d	file:
RETURN	parser.tab.c	/^    RETURN = 292$/;"	e	enum:yytokentype	file:
RETURN	parser.tab.h	/^    RETURN = 292$/;"	e	enum:yytokentype
RETURN_ARRAY	semanticAnalysis.c	/^    RETURN_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
RETURN_STMT	header.h	/^    RETURN_STMT,$/;"	e	enum:STMT_KIND
RETURN_TYPE_UNMATCH	semanticAnalysis.c	/^    RETURN_TYPE_UNMATCH,$/;"	e	enum:ErrorMsgKind	file:
ROUND_DOWN	spim/CPU/spim.h	61;"	d
ROUND_UP	spim/CPU/spim.h	60;"	d
RS	spim/CPU/inst.h	99;"	d
RS	spim/spim/spim.c	46;"	d	file:
RT	spim/CPU/inst.h	102;"	d
RUN_CMD	spim/spim/spim.c	/^  RUN_CMD,$/;"	e	enum:__anon1	file:
R_LENGTH	spim/CPU/reg.h	40;"	d
SBRK_SYSCALL	spim/CPU/spim-syscall.h	42;"	d
SBRK_SYSCALL	spim/CPU/syscall.h	49;"	d
SCALAR_TYPE_DESCRIPTOR	symbolTable.h	/^    SCALAR_TYPE_DESCRIPTOR,$/;"	e	enum:TypeDescriptorKind
SET_BASE	spim/CPU/inst.h	127;"	d
SET_BKPT_CMD	spim/spim/spim.c	/^  SET_BKPT_CMD,$/;"	e	enum:__anon1	file:
SET_COND	spim/CPU/inst.h	135;"	d
SET_ENCODING	spim/CPU/inst.h	146;"	d
SET_EQ_POPS	spim/CPU/parser.y	/^SET_EQ_POPS:	Y_SEQ_POP$/;"	l
SET_EXPR	spim/CPU/inst.h	149;"	d
SET_FD	spim/CPU/inst.h	116;"	d
SET_FPR_D	spim/CPU/reg.h	188;"	d
SET_FPR_S	spim/CPU/reg.h	186;"	d
SET_FPR_W	spim/CPU/reg.h	192;"	d
SET_FS	spim/CPU/inst.h	110;"	d
SET_FT	spim/CPU/inst.h	113;"	d
SET_GE_POPS	spim/CPU/parser.y	/^SET_GE_POPS:	Y_SGE_POP$/;"	l
SET_GT_POPS	spim/CPU/parser.y	/^SET_GT_POPS:	Y_SGT_POP$/;"	l
SET_IMM	spim/CPU/inst.h	123;"	d
SET_IOFFSET	spim/CPU/inst.h	130;"	d
SET_LE_POPS	spim/CPU/parser.y	/^SET_LE_POPS:	Y_SLE_POP$/;"	l
SET_OPCODE	spim/CPU/inst.h	96;"	d
SET_RD	spim/CPU/inst.h	106;"	d
SET_RS	spim/CPU/inst.h	100;"	d
SET_RT	spim/CPU/inst.h	103;"	d
SET_SHAMT	spim/CPU/inst.h	120;"	d
SET_SOURCE	spim/CPU/inst.h	152;"	d
SET_TARGET	spim/CPU/inst.h	143;"	d
SHAMT	spim/CPU/inst.h	119;"	d
SHIFTV_OPS_REV2	spim/CPU/parser.y	/^SHIFTV_OPS_REV2:	Y_ROTRV_OP$/;"	l
SHIFT_OPS	spim/CPU/parser.y	/^SHIFT_OPS:	Y_SLL_OP$/;"	l
SHIFT_OPS_REV2	spim/CPU/parser.y	/^SHIFT_OPS_REV2:	Y_ROTR_OP$/;"	l
SIGN_BIT	spim/CPU/run.c	86;"	d	file:
SIGN_EX	spim/CPU/spim.h	64;"	d
SMALL_DATA_SEG_MAX_SIZE	spim/CPU/spim.h	188;"	d
SOURCE	spim/CPU/inst.h	151;"	d
SPIM_LITTLENDIAN	spim/CPU/spim.h	44;"	d
SPIM_VERSION	spim/CPU/version.h	1;"	d
SRC1	spim/CPU/parser.y	/^SRC1:		REGISTER ;$/;"	l
SRC2	spim/CPU/parser.y	/^SRC2:		REGISTER ;$/;"	l
SS_BUF_LENGTH	spim/CPU/string-stream.c	44;"	d	file:
STACK_LIMIT	spim/CPU/spim.h	158;"	d
STACK_SIZE	spim/CPU/spim.h	152;"	d
STACK_TOP	spim/CPU/mem.h	91;"	d
STEP_CMD	spim/spim/spim.c	/^  STEP_CMD,$/;"	e	enum:__anon1	file:
STMTSemanticValue	header.h	/^typedef struct STMTSemanticValue$/;"	s
STMTSemanticValue	header.h	/^} STMTSemanticValue;$/;"	t	typeref:struct:STMTSemanticValue
STMT_KIND	header.h	/^typedef enum STMT_KIND$/;"	g
STMT_KIND	header.h	/^} STMT_KIND;$/;"	t	typeref:enum:STMT_KIND
STMT_LIST_NODE	header.h	/^    STMT_LIST_NODE,$/;"	e	enum:AST_TYPE
STMT_NODE	header.h	/^    STMT_NODE,$/;"	e	enum:AST_TYPE
STOREC_OPS	spim/CPU/parser.y	/^STOREC_OPS:	Y_SWC2_OP$/;"	l
STOREFP_INDEX_OPS	spim/CPU/parser.y	/^STOREFP_INDEX_OPS:	Y_SDXC1_OP$/;"	l
STOREFP_OPS	spim/CPU/parser.y	/^STOREFP_OPS:	Y_SWC1_OP$/;"	l
STORE_OPS	spim/CPU/parser.y	/^STORE_OPS:	Y_SB_OP$/;"	l
STR	spim/CPU/parser.y	/^STR:		Y_STR$/;"	l
STRINGC	header.h	/^    STRINGC$/;"	e	enum:C_type
STRING_OPERATION	semanticAnalysis.c	/^    STRING_OPERATION,$/;"	e	enum:ErrorMsgKind	file:
STR_LST	spim/CPU/parser.y	/^STR_LST:	STR_LST STR$/;"	l
SUB_OPS	spim/CPU/parser.y	/^SUB_OPS:	Y_SUB_OP$/;"	l
SYMBOL_IS_DEFINED	spim/CPU/sym-tbl.h	57;"	d
SYMBOL_IS_NOT_TYPE	semanticAnalysis.c	/^    SYMBOL_IS_NOT_TYPE,$/;"	e	enum:ErrorMsgKind	file:
SYMBOL_REDECLARE	semanticAnalysis.c	/^    SYMBOL_REDECLARE,$/;"	e	enum:ErrorMsgKind	file:
SYMBOL_TABLE_FLOAT_NAME	symbolTable.h	9;"	d
SYMBOL_TABLE_INT_NAME	symbolTable.h	8;"	d
SYMBOL_TABLE_SYS_LIB_FREAD	symbolTable.h	12;"	d
SYMBOL_TABLE_SYS_LIB_READ	symbolTable.h	11;"	d
SYMBOL_TABLE_VOID_NAME	symbolTable.h	10;"	d
SYMBOL_UNDECLARED	semanticAnalysis.c	/^    SYMBOL_UNDECLARED,$/;"	e	enum:ErrorMsgKind	file:
SYS_OPS	spim/CPU/parser.y	/^SYS_OPS:	Y_RFE_OP$/;"	l
SymbolAttribute	symbolTable.h	/^typedef struct SymbolAttribute$/;"	s
SymbolAttribute	symbolTable.h	/^} SymbolAttribute;$/;"	t	typeref:struct:SymbolAttribute
SymbolAttributeKind	symbolTable.h	/^typedef enum SymbolAttributeKind$/;"	g
SymbolAttributeKind	symbolTable.h	/^} SymbolAttributeKind;$/;"	t	typeref:enum:SymbolAttributeKind
SymbolTable	symbolTable.h	/^typedef struct SymbolTable$/;"	s
SymbolTable	symbolTable.h	/^} SymbolTable;$/;"	t	typeref:struct:SymbolTable
SymbolTableEntry	symbolTable.h	/^typedef struct SymbolTableEntry$/;"	s
SymbolTableEntry	symbolTable.h	/^} SymbolTableEntry;$/;"	t	typeref:struct:SymbolTableEntry
TARGET	Makefile	/^TARGET = parser$/;"	m
TARGET	spim/CPU/inst.h	142;"	d
TERM	spim/CPU/parser.y	/^TERM:		Y_NL$/;"	l
TEST_DIR	spim/spim/Makefile	/^TEST_DIR = ..\/Tests$/;"	m
TEXT	gen-part.cpp	/^const char* TEXT= ".text";$/;"	v
TEXT_BOT	spim/CPU/mem.h	49;"	d
TEXT_CHUNK_SIZE	spim/CPU/mem.h	56;"	d
TEXT_SIZE	spim/CPU/spim.h	110;"	d
TF	spim/CPU/inst.h	139;"	d
TIMER_TICK_MS	spim/CPU/spim.h	216;"	d
TLB_OPS	spim/CPU/parser.y	/^TLB_OPS:	Y_TLBP_OP$/;"	l
TOO_FEW_ARGUMENTS	semanticAnalysis.c	/^    TOO_FEW_ARGUMENTS,$/;"	e	enum:ErrorMsgKind	file:
TOO_MANY_ARGUMENTS	semanticAnalysis.c	/^    TOO_MANY_ARGUMENTS,$/;"	e	enum:ErrorMsgKind	file:
TRANS_BUFFER_ADDR	spim/CPU/mem.h	133;"	d
TRANS_CTRL_ADDR	spim/CPU/mem.h	132;"	d
TRANS_INT_ENABLE	spim/CPU/mem.h	136;"	d
TRANS_INT_LEVEL	spim/CPU/mem.h	138;"	d
TRANS_LATENCY	spim/CPU/spim.h	211;"	d
TRANS_READY	spim/CPU/mem.h	135;"	d
TRM	spim/CPU/parser.y	/^TRM:$/;"	l
TRY_TO_INIT_ARRAY	semanticAnalysis.c	/^    TRY_TO_INIT_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
TWO_WAY_SET	spim/CPU/spim.h	192;"	d
TYPEDEF	parser.tab.c	/^    TYPEDEF = 267,$/;"	e	enum:yytokentype	file:
TYPEDEF	parser.tab.h	/^    TYPEDEF = 267,$/;"	e	enum:yytokentype
TYPEDEF_VOID_ARRAY	semanticAnalysis.c	/^    TYPEDEF_VOID_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
TYPE_ATTRIBUTE	symbolTable.h	/^    TYPE_ATTRIBUTE,$/;"	e	enum:SymbolAttributeKind
TYPE_DECL	header.h	/^    TYPE_DECL,$/;"	e	enum:DECL_KIND
TagSignal	codeGen.h	/^enum TagSignal{$/;"	g
TagSystem	codeGen.h	/^class TagSystem{$/;"	c
TypeDescriptor	symbolTable.h	/^typedef struct TypeDescriptor$/;"	s
TypeDescriptor	symbolTable.h	/^} TypeDescriptor;$/;"	t	typeref:struct:TypeDescriptor
TypeDescriptorKind	symbolTable.h	/^typedef enum TypeDescriptorKind$/;"	g
TypeDescriptorKind	symbolTable.h	/^} TypeDescriptorKind;$/;"	t	typeref:enum:TypeDescriptorKind
TypeSpecSemanticValue	header.h	/^typedef struct TypeSpecSemanticValue$/;"	s
TypeSpecSemanticValue	header.h	/^} TypeSpecSemanticValue;$/;"	t	typeref:struct:TypeSpecSemanticValue
UIMM16	spim/CPU/parser.y	/^UIMM16:	IMM32$/;"	l
UIMM_MAX	spim/CPU/inst.h	165;"	d
UIMM_MIN	spim/CPU/inst.h	164;"	d
UINT16_MAX	lex.yy.c	80;"	d	file:
UINT32_MAX	lex.yy.c	83;"	d	file:
UINT8_MAX	lex.yy.c	77;"	d	file:
ULOADH_POPS	spim/CPU/parser.y	/^ULOADH_POPS:	Y_ULH_POP$/;"	l
UNARY_BR_OPS	spim/CPU/parser.y	/^UNARY_BR_OPS:	Y_BGEZ_OP$/;"	l
UNARY_BR_POPS	spim/CPU/parser.y	/^UNARY_BR_POPS:	Y_BEQZ_POP$/;"	l
UNARY_OPERATION	header.h	/^    UNARY_OPERATION$/;"	e	enum:EXPR_KIND
UNARY_OPERATOR	header.h	/^typedef enum UNARY_OPERATOR$/;"	g
UNARY_OPERATOR	header.h	/^} UNARY_OPERATOR;$/;"	t	typeref:enum:UNARY_OPERATOR
UNARY_OPS_REV2	spim/CPU/parser.y	/^UNARY_OPS_REV2:	Y_DI_OP$/;"	l
UNARY_OP_LOGICAL_NEGATION	header.h	/^    UNARY_OP_LOGICAL_NEGATION$/;"	e	enum:UNARY_OPERATOR
UNARY_OP_NEGATIVE	header.h	/^    UNARY_OP_NEGATIVE,$/;"	e	enum:UNARY_OPERATOR
UNARY_OP_POSITIVE	header.h	/^    UNARY_OP_POSITIVE,$/;"	e	enum:UNARY_OPERATOR
UNKNOWN_CMD	spim/spim/spim.c	/^  UNKNOWN_CMD = 0,$/;"	e	enum:__anon1	file:
VARIABLE_ATTRIBUTE	symbolTable.h	/^    VARIABLE_ATTRIBUTE,$/;"	e	enum:SymbolAttributeKind
VARIABLE_DECL	header.h	/^    VARIABLE_DECL,$/;"	e	enum:DECL_KIND
VARIABLE_DECL_LIST_NODE	header.h	/^    VARIABLE_DECL_LIST_NODE,$/;"	e	enum:AST_TYPE
VC_EXTRALEAN	spim/CPU/run.c	45;"	d	file:
VOID	parser.tab.c	/^    VOID = 260,$/;"	e	enum:yytokentype	file:
VOID	parser.tab.h	/^    VOID = 260,$/;"	e	enum:yytokentype
VOID_TYPE	header.h	/^    VOID_TYPE,$/;"	e	enum:DATA_TYPE
VOID_VARIABLE	semanticAnalysis.c	/^    VOID_VARIABLE,$/;"	e	enum:ErrorMsgKind	file:
VPATH	spim/spim/Makefile	/^VPATH = src:$(CPU_DIR)$/;"	m
WHILE	parser.tab.c	/^    WHILE = 265,$/;"	e	enum:yytokentype	file:
WHILE	parser.tab.h	/^    WHILE = 265,$/;"	e	enum:yytokentype
WHILE_STMT	header.h	/^    WHILE_STMT,$/;"	e	enum:STMT_KIND
WITH_INIT_ID	header.h	/^    WITH_INIT_ID, \/\/ID_NODE->child = initial value$/;"	e	enum:IDENTIFIER_KIND
WORD	gen-part.cpp	/^const char* WORD= ".word";$/;"	v
WRITE_SYSCALL	spim/CPU/spim-syscall.h	49;"	d
WRITE_SYSCALL	spim/CPU/syscall.h	58;"	d
YACC	Makefile	/^YACC = bison -v$/;"	m
YACC	spim/spim/Makefile	/^YACC=bison$/;"	m
YACCFLAG	Makefile	/^YACCFLAG = -d$/;"	m
YYABORT	parser.tab.c	844;"	d	file:
YYACCEPT	parser.tab.c	843;"	d	file:
YYBACKUP	parser.tab.c	850;"	d	file:
YYBISON	parser.tab.c	44;"	d	file:
YYBISON_VERSION	parser.tab.c	47;"	d	file:
YYCASE_	parser.tab.c	1191;"	d	file:
YYCASE_	parser.tab.c	1201;"	d	file:
YYCOPY	parser.tab.c	504;"	d	file:
YYCOPY	parser.tab.c	507;"	d	file:
YYCOPY_NEEDED	parser.tab.c	479;"	d	file:
YYDEBUG	parser.tab.c	205;"	d	file:
YYDEBUG	parser.tab.h	37;"	d
YYDPRINTF	parser.tab.c	881;"	d	file:
YYDPRINTF	parser.tab.c	996;"	d	file:
YYEMPTY	parser.tab.c	840;"	d	file:
YYEOF	parser.tab.c	841;"	d	file:
YYERRCODE	parser.tab.c	869;"	d	file:
YYERROR	parser.tab.c	845;"	d	file:
YYERROR_VERBOSE	parser.tab.c	193;"	d	file:
YYERROR_VERBOSE	parser.tab.c	194;"	d	file:
YYERROR_VERBOSE	parser.tab.c	196;"	d	file:
YYFINAL	parser.tab.c	520;"	d	file:
YYFPRINTF	parser.tab.c	878;"	d	file:
YYFREE	parser.tab.c	450;"	d	file:
YYINITDEPTH	parser.tab.c	1005;"	d	file:
YYLAST	parser.tab.c	522;"	d	file:
YYMALLOC	parser.tab.c	444;"	d	file:
YYMAXDEPTH	parser.tab.c	1016;"	d	file:
YYMAXUTOK	parser.tab.c	536;"	d	file:
YYNNTS	parser.tab.c	527;"	d	file:
YYNRULES	parser.tab.c	529;"	d	file:
YYNSTATES	parser.tab.c	531;"	d	file:
YYNTOKENS	parser.tab.c	525;"	d	file:
YYPACT_NINF	parser.tab.c	630;"	d	file:
YYPOPSTACK	parser.tab.c	1316;"	d	file:
YYPULL	parser.tab.c	59;"	d	file:
YYPURE	parser.tab.c	53;"	d	file:
YYPUSH	parser.tab.c	56;"	d	file:
YYRECOVERING	parser.tab.c	848;"	d	file:
YYSIZE_MAXIMUM	parser.tab.c	323;"	d	file:
YYSIZE_T	parser.tab.c	312;"	d	file:
YYSIZE_T	parser.tab.c	314;"	d	file:
YYSIZE_T	parser.tab.c	317;"	d	file:
YYSIZE_T	parser.tab.c	319;"	d	file:
YYSKELETON_NAME	parser.tab.c	50;"	d	file:
YYSTACK_ALLOC	parser.tab.c	398;"	d	file:
YYSTACK_ALLOC	parser.tab.c	402;"	d	file:
YYSTACK_ALLOC	parser.tab.c	407;"	d	file:
YYSTACK_ALLOC	parser.tab.c	430;"	d	file:
YYSTACK_ALLOC_MAXIMUM	parser.tab.c	427;"	d	file:
YYSTACK_ALLOC_MAXIMUM	parser.tab.c	433;"	d	file:
YYSTACK_BYTES	parser.tab.c	475;"	d	file:
YYSTACK_FREE	parser.tab.c	421;"	d	file:
YYSTACK_FREE	parser.tab.c	431;"	d	file:
YYSTACK_GAP_MAXIMUM	parser.tab.c	471;"	d	file:
YYSTACK_RELOCATE	parser.tab.c	486;"	d	file:
YYSTATE	lex.yy.c	132;"	d	file:
YYSTYPE	parser.tab.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	parser.tab.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE	parser.tab.h	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	parser.tab.h	/^union YYSTYPE$/;"	u
YYSTYPE	spim/CPU/scanner.h	53;"	d
YYSTYPE_IS_DECLARED	parser.tab.c	268;"	d	file:
YYSTYPE_IS_DECLARED	parser.tab.h	100;"	d
YYSTYPE_IS_TRIVIAL	parser.tab.c	267;"	d	file:
YYSTYPE_IS_TRIVIAL	parser.tab.h	99;"	d
YYTABLES_NAME	lex.yy.c	2036;"	d	file:
YYTABLE_NINF	parser.tab.c	635;"	d	file:
YYTERROR	parser.tab.c	868;"	d	file:
YYTOKENTYPE	parser.tab.c	213;"	d	file:
YYTOKENTYPE	parser.tab.h	45;"	d
YYTRANSLATE	parser.tab.c	538;"	d	file:
YYUNDEFTOK	parser.tab.c	535;"	d	file:
YYUSE	parser.tab.c	366;"	d	file:
YYUSE	parser.tab.c	368;"	d	file:
YY_	parser.tab.c	329;"	d	file:
YY_	parser.tab.c	333;"	d	file:
YY_ATTRIBUTE	parser.tab.c	341;"	d	file:
YY_ATTRIBUTE	parser.tab.c	343;"	d	file:
YY_ATTRIBUTE_PURE	parser.tab.c	348;"	d	file:
YY_ATTRIBUTE_UNUSED	parser.tab.c	352;"	d	file:
YY_AT_BOL	lex.yy.c	339;"	d	file:
YY_BREAK	lex.yy.c	698;"	d	file:
YY_BUFFER_EOF_PENDING	lex.yy.c	255;"	d	file:
YY_BUFFER_NEW	lex.yy.c	243;"	d	file:
YY_BUFFER_NORMAL	lex.yy.c	244;"	d	file:
YY_BUFFER_STATE	lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	lex.yy.c	149;"	d	file:
YY_BUF_SIZE	lex.yy.c	151;"	d	file:
YY_CHAR	lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	lex.yy.c	271;"	d	file:
YY_CURRENT_BUFFER_LVALUE	lex.yy.c	278;"	d	file:
YY_DECL	lex.yy.c	686;"	d	file:
YY_DECL_IS_OURS	lex.yy.c	682;"	d	file:
YY_DO_BEFORE_ACTION	lex.yy.c	364;"	d	file:
YY_END_OF_BUFFER	lex.yy.c	372;"	d	file:
YY_END_OF_BUFFER_CHAR	lex.yy.c	140;"	d	file:
YY_EXIT_FAILURE	lex.yy.c	1834;"	d	file:
YY_EXTRA_TYPE	lex.yy.c	538;"	d	file:
YY_FATAL_ERROR	lex.yy.c	673;"	d	file:
YY_FLEX_MAJOR_VERSION	lex.yy.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	lex.yy.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	lex.yy.c	11;"	d	file:
YY_FLUSH_BUFFER	lex.yy.c	307;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	parser.tab.c	373;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	parser.tab.c	383;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	parser.tab.c	377;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	parser.tab.c	384;"	d	file:
YY_INITIAL_VALUE	parser.tab.c	380;"	d	file:
YY_INITIAL_VALUE	parser.tab.c	387;"	d	file:
YY_INPUT	lex.yy.c	626;"	d	file:
YY_INT_ALIGNED	lex.yy.c	4;"	d	file:
YY_LESS_LINENO	lex.yy.c	172;"	d	file:
YY_LOCATION_PRINT	parser.tab.c	889;"	d	file:
YY_MORE_ADJ	lex.yy.c	519;"	d	file:
YY_NEW_FILE	lex.yy.c	138;"	d	file:
YY_NULL	lex.yy.c	112;"	d	file:
YY_NULLPTR	parser.tab.c	185;"	d	file:
YY_NULLPTR	parser.tab.c	187;"	d	file:
YY_NUM_RULES	lex.yy.c	371;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	608;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	610;"	d	file:
YY_REDUCE_PRINT	parser.tab.c	986;"	d	file:
YY_REDUCE_PRINT	parser.tab.c	999;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	lex.yy.c	520;"	d	file:
YY_RULE_SETUP	lex.yy.c	701;"	d	file:
YY_SC_TO_UI	lex.yy.c	119;"	d	file:
YY_STACK_PRINT	parser.tab.c	955;"	d	file:
YY_STACK_PRINT	parser.tab.c	998;"	d	file:
YY_START	lex.yy.c	131;"	d	file:
YY_START_STACK_INCR	lex.yy.c	668;"	d	file:
YY_STATE_BUF_SIZE	lex.yy.c	157;"	d	file:
YY_STATE_EOF	lex.yy.c	135;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	lex.yy.c	196;"	d	file:
YY_SYMBOL_PRINT	parser.tab.c	893;"	d	file:
YY_SYMBOL_PRINT	parser.tab.c	997;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	lex.yy.c	160;"	d	file:
YY_TYPEDEF_YY_SIZE_T	lex.yy.c	191;"	d	file:
YY_USER_ACTION	lex.yy.c	693;"	d	file:
YY_USE_CONST	lex.yy.c	100;"	d	file:
YY_USE_CONST	lex.yy.c	93;"	d	file:
YY_YY_PARSER_TAB_H_INCLUDED	parser.tab.c	202;"	d	file:
YY_YY_PARSER_TAB_H_INCLUDED	parser.tab.h	34;"	d
_CodeGen_H	codeGen.h	2;"	d
_IEEE	spim/CPU/run.c	35;"	d	file:
_Noreturn	parser.tab.c	358;"	d	file:
_Noreturn	parser.tab.c	360;"	d	file:
__HEADER_H__	header.h	2;"	d
__STDC_LIMIT_MACROS	lex.yy.c	39;"	d	file:
__SYMBOL_TABLE_H__	symbolTable.h	2;"	d
__e0_	spim/CPU/exceptions.s	/^__e0_:	.asciiz "  [Interrupt] "$/;"	l
__e10_	spim/CPU/exceptions.s	/^__e10_:	.asciiz	"  [Reserved instruction] "$/;"	l
__e11_	spim/CPU/exceptions.s	/^__e11_:	.asciiz	""$/;"	l
__e12_	spim/CPU/exceptions.s	/^__e12_:	.asciiz	"  [Arithmetic overflow] "$/;"	l
__e13_	spim/CPU/exceptions.s	/^__e13_:	.asciiz	"  [Trap] "$/;"	l
__e14_	spim/CPU/exceptions.s	/^__e14_:	.asciiz	""$/;"	l
__e15_	spim/CPU/exceptions.s	/^__e15_:	.asciiz	"  [Floating point] "$/;"	l
__e16_	spim/CPU/exceptions.s	/^__e16_:	.asciiz	""$/;"	l
__e17_	spim/CPU/exceptions.s	/^__e17_:	.asciiz	""$/;"	l
__e18_	spim/CPU/exceptions.s	/^__e18_:	.asciiz	"  [Coproc 2]"$/;"	l
__e19_	spim/CPU/exceptions.s	/^__e19_:	.asciiz	""$/;"	l
__e1_	spim/CPU/exceptions.s	/^__e1_:	.asciiz	"  [TLB]"$/;"	l
__e20_	spim/CPU/exceptions.s	/^__e20_:	.asciiz	""$/;"	l
__e21_	spim/CPU/exceptions.s	/^__e21_:	.asciiz	""$/;"	l
__e22_	spim/CPU/exceptions.s	/^__e22_:	.asciiz	"  [MDMX]"$/;"	l
__e23_	spim/CPU/exceptions.s	/^__e23_:	.asciiz	"  [Watch]"$/;"	l
__e24_	spim/CPU/exceptions.s	/^__e24_:	.asciiz	"  [Machine check]"$/;"	l
__e25_	spim/CPU/exceptions.s	/^__e25_:	.asciiz	""$/;"	l
__e26_	spim/CPU/exceptions.s	/^__e26_:	.asciiz	""$/;"	l
__e27_	spim/CPU/exceptions.s	/^__e27_:	.asciiz	""$/;"	l
__e28_	spim/CPU/exceptions.s	/^__e28_:	.asciiz	""$/;"	l
__e29_	spim/CPU/exceptions.s	/^__e29_:	.asciiz	""$/;"	l
__e2_	spim/CPU/exceptions.s	/^__e2_:	.asciiz	"  [TLB]"$/;"	l
__e30_	spim/CPU/exceptions.s	/^__e30_:	.asciiz	"  [Cache]"$/;"	l
__e31_	spim/CPU/exceptions.s	/^__e31_:	.asciiz	""$/;"	l
__e3_	spim/CPU/exceptions.s	/^__e3_:	.asciiz	"  [TLB]"$/;"	l
__e4_	spim/CPU/exceptions.s	/^__e4_:	.asciiz	"  [Address error in inst\/data fetch] "$/;"	l
__e5_	spim/CPU/exceptions.s	/^__e5_:	.asciiz	"  [Address error in store] "$/;"	l
__e6_	spim/CPU/exceptions.s	/^__e6_:	.asciiz	"  [Bad instruction address] "$/;"	l
__e7_	spim/CPU/exceptions.s	/^__e7_:	.asciiz	"  [Bad data address] "$/;"	l
__e8_	spim/CPU/exceptions.s	/^__e8_:	.asciiz	"  [Error in syscall] "$/;"	l
__e9_	spim/CPU/exceptions.s	/^__e9_:	.asciiz	"  [Breakpoint] "$/;"	l
__eoth	spim/CPU/exceptions.s	/^__eoth:$/;"	l
__excp	spim/CPU/exceptions.s	/^__excp:	.word __e0_, __e1_, __e2_, __e3_, __e4_, __e5_, __e6_, __e7_, __e8_, __e9_$/;"	l
__m1_	spim/CPU/exceptions.s	/^__m1_:	.asciiz "  Exception "$/;"	l
__m2_	spim/CPU/exceptions.s	/^__m2_:	.asciiz " occurred and ignored\\n"$/;"	l
__start	spim/CPU/exceptions.s	/^__start:$/;"	l
a_opcode_tbl	spim/CPU/inst.c	/^static name_val_val a_opcode_tbl [] = {$/;"	v	file:
accept_pseudo_insts	spim/spim/spim.c	/^bool accept_pseudo_insts;	\/* => parse pseudo instructions  *\/$/;"	v
add_breakpoint	spim/CPU/spim-utils.c	/^add_breakpoint (mem_addr addr)$/;"	f
add_op	parser.y	/^add_op		: OP_PLUS$/;"	l
addr	spim/CPU/spim-utils.c	/^  mem_addr addr;$/;"	m	struct:bkptrec	file:
addr	spim/CPU/sym-tbl.h	/^  long addr;			\/* Address of label or 0 if not yet defined *\/$/;"	m	struct:lab
addr	spim/CPU/sym-tbl.h	/^  mem_addr addr;$/;"	m	struct:lab_use
addr_expr	spim/CPU/inst.h	/^} addr_expr;$/;"	t	typeref:struct:addrexpr
addr_expr_imm	spim/CPU/inst.c	/^addr_expr_imm (addr_expr *expr)$/;"	f
addr_expr_reg	spim/CPU/inst.c	/^addr_expr_reg (addr_expr *expr)$/;"	f
addrexpr	spim/CPU/inst.h	/^typedef struct addrexpr$/;"	s
align_data	spim/CPU/data.c	/^align_data (int alignment)$/;"	f
alloca	parser.tab.c	405;"	d	file:
arrayProperties	symbolTable.h	/^        ArrayProperties arrayProperties;\/\/kind: ARRAY_TYPE_DESCRIPTOR$/;"	m	union:TypeDescriptor::__anon15
assemble	spim/spim/spim.c	/^bool assemble;			\/* => assemble, write to stdout and exit *\/$/;"	v
assign_expr	parser.y	/^assign_expr     : ID OP_ASSIGN relop_expr$/;"	l
assign_expr_list	parser.y	/^assign_expr_list : nonempty_assign_expr_list$/;"	l
attr	symbolTable.h	/^    } attr;$/;"	m	struct:SymbolAttribute	typeref:union:SymbolAttribute::__anon16
attribute	symbolTable.h	/^    SymbolAttribute* attribute;$/;"	m	struct:SymbolTableEntry
attributeKind	symbolTable.h	/^    SymbolAttributeKind attributeKind;$/;"	m	struct:SymbolAttribute
auto_alignment	spim/CPU/data.c	/^static bool auto_alignment = true; \/* => align literal to natural bound*\/$/;"	v	file:
bad_mem_read	spim/CPU/mem.c	/^bad_mem_read (mem_addr addr, int mask)$/;"	f	file:
bad_mem_write	spim/CPU/mem.c	/^bad_mem_write (mem_addr addr, mem_word value, int mask)$/;"	f	file:
bad_text_read	spim/CPU/mem.c	/^bad_text_read (mem_addr addr)$/;"	f	file:
bad_text_write	spim/CPU/mem.c	/^bad_text_write (mem_addr addr, instruction *inst)$/;"	f	file:
bare_machine	spim/spim/spim.c	/^bool bare_machine;		\/* => simulate bare machine *\/$/;"	v
binaryOp	header.h	/^        BINARY_OPERATOR binaryOp;$/;"	m	union:EXPRSemanticValue::__anon12
binaryOp	header.h	/^    BINARY_OPERATOR binaryOp() {$/;"	f	struct:EXPRSemanticValue
bits	spim/CPU/inst.h	/^  short bits;			\/* > 0 => 31..16, < 0 => 15..0 *\/$/;"	m	struct:immexpr
bkpt	spim/CPU/spim-utils.c	/^} bkpt;$/;"	t	typeref:struct:bkptrec	file:
bkptrec	spim/CPU/spim-utils.c	/^typedef struct bkptrec$/;"	s	file:
bkpts	spim/CPU/spim-utils.c	/^static bkpt *bkpts = NULL;$/;"	v	file:
block	parser.y	/^block           : decl_list stmt_list$/;"	l
break_inst	spim/CPU/inst.c	/^static instruction *break_inst = NULL;$/;"	v	file:
buf	spim/CPU/string-stream.h	/^  char* buf;			\/* Buffer containing output *\/$/;"	m	struct:str_stm
bump_CP0_timer	spim/CPU/run.c	/^bump_CP0_timer ()$/;"	f	file:
cexpr	parser.y	/^cexpr		: cexpr OP_PLUS mcexpr$/;"	l
cfactor	parser.y	/^cfactor:	CONST$/;"	l
checkAssignOrExpr	semanticAnalysis.c	/^void checkAssignOrExpr(AST_NODE* assignOrExprRelatedNode)$/;"	f
checkAssignmentStmt	semanticAnalysis.c	/^void checkAssignmentStmt(AST_NODE* assignmentNode)$/;"	f
checkForStmt	semanticAnalysis.c	/^void checkForStmt(AST_NODE* forNode)$/;"	f
checkFunctionCall	semanticAnalysis.c	/^void checkFunctionCall(AST_NODE* functionCallNode)$/;"	f
checkIfStmt	semanticAnalysis.c	/^void checkIfStmt(AST_NODE* ifNode)$/;"	f
checkInit	semanticAnalysis.c	/^void checkInit(AST_NODE* initNode, AST_NODE *declNode)$/;"	f
checkParameterPassing	semanticAnalysis.c	/^void checkParameterPassing(Parameter* formalParameter, AST_NODE* actualParameter)$/;"	f
checkReturnStmt	semanticAnalysis.c	/^void checkReturnStmt(AST_NODE* returnNode)$/;"	f
checkWhileStmt	semanticAnalysis.c	/^void checkWhileStmt(AST_NODE* whileNode)$/;"	f
checkWriteFunction	semanticAnalysis.c	/^void checkWriteFunction(AST_NODE* functionCallNode)$/;"	f
check_memory_mapped_IO	spim/CPU/mem.c	/^check_memory_mapped_IO ()$/;"	f
child	header.h	/^        struct AST_NODE *child;$/;"	m	class:AST_NODE	typeref:struct:AST_NODE::AST_NODE
closeScope	symbolTable.c	/^void closeScope()$/;"	f
codeGen	codeGen.c	/^void codeGen(AST_NODE* prog){$/;"	f
compare_ops	spim/CPU/dump_ops.c	/^compare_ops (inst *p1, inst *p2)$/;"	f
compare_pair_value	spim/CPU/inst.c	/^compare_pair_value (name_val_val *p1, name_val_val *p2)$/;"	f	file:
console_in	spim/spim/spim.c	/^port message_out, console_out, console_in;$/;"	v
console_input_available	spim/spim/spim.c	/^console_input_available ()$/;"	f
console_out	spim/spim/spim.c	/^port message_out, console_out, console_in;$/;"	v
console_state_saved	spim/spim/spim.c	/^static int console_state_saved;$/;"	v	file:
console_to_program	spim/spim/spim.c	/^console_to_program ()$/;"	f	file:
console_to_spim	spim/spim/spim.c	/^console_to_spim ()$/;"	f	file:
const1	header.h	/^            CON_Type *const1;$/;"	m	union:AST_NODE::__anon14
const1	parser.tab.c	/^	CON_Type  *const1;$/;"	m	union:YYSTYPE	file:
const1	parser.tab.h	/^	CON_Type  *const1;$/;"	m	union:YYSTYPE
constEvalValue	header.h	/^    } constEvalValue;$/;"	m	struct:EXPRSemanticValue	typeref:union:EXPRSemanticValue::__anon11
const_flag	spim/CPU/sym-tbl.h	/^  unsigned const_flag : 1;	\/* Non-zero => constant value (in addr) *\/$/;"	m	struct:lab
const_imm_expr	spim/CPU/inst.c	/^const_imm_expr (int32 value)$/;"	f
const_type	header.h	/^    C_type  const_type;$/;"	m	struct:CON_Type
const_u	header.h	/^    } const_u;$/;"	m	struct:CON_Type	typeref:union:CON_Type::__anon13
control_c_seen	spim/spim/spim.c	/^control_c_seen (int \/*arg*\/)$/;"	f	file:
copy_imm_expr	spim/CPU/inst.c	/^copy_imm_expr (imm_expr *old_expr)$/;"	f
copy_inst	spim/CPU/inst.c	/^copy_inst (instruction *inst)$/;"	f
copy_int_to_stack	spim/CPU/spim-utils.c	/^copy_int_to_stack (int n)$/;"	f	file:
copy_str_to_stack	spim/CPU/spim-utils.c	/^copy_str_to_stack (char *s)$/;"	f	file:
curState	codeGen.h	/^    int curState;$/;"	m	class:TagSystem
currentLevel	symbolTable.h	/^    int currentLevel;$/;"	m	struct:SymbolTable
current_data_pc	spim/CPU/data.c	/^current_data_pc ()$/;"	f
current_text_pc	spim/CPU/inst.c	/^current_text_pc ()$/;"	f
dataType	header.h	/^        DATA_TYPE dataType;$/;"	m	class:AST_NODE
dataType	symbolTable.h	/^        DATA_TYPE dataType;\/\/kind: SCALAR_TYPE_DESCRIPTOR$/;"	m	union:TypeDescriptor::__anon15
data_begins_at_point	spim/CPU/data.c	/^data_begins_at_point (mem_addr addr)$/;"	f
data_modified	spim/CPU/mem.c	/^bool data_modified;		\/* => a data segment was written *\/$/;"	v
data_seg	spim/CPU/mem.c	/^mem_word *data_seg;$/;"	v
data_seg_b	spim/CPU/mem.c	/^BYTE_TYPE *data_seg_b;		\/* Ditto *\/$/;"	v
data_seg_h	spim/CPU/mem.c	/^short *data_seg_h;		\/* Points to same vector as DATA_SEG *\/$/;"	v
data_size_limit	spim/CPU/mem.c	/^static int32 data_size_limit, stack_size_limit, k_data_size_limit;$/;"	v	file:
data_top	spim/CPU/mem.c	/^mem_addr data_top;$/;"	v
decl	parser.y	/^decl		: type_decl$/;"	l
declSemanticValue	header.h	/^            DECLSemanticValue declSemanticValue;$/;"	m	union:AST_NODE::__anon14
decl_list	parser.y	/^decl_list	: decl_list decl$/;"	l
declareFunction	semanticAnalysis.c	/^void declareFunction(AST_NODE* declarationNode)$/;"	f
declareIdList	semanticAnalysis.c	/^void declareIdList(AST_NODE* declarationNode, SymbolAttributeKind isVariableOrTypeAttribute, int ignoreArrayFirstDimSize)$/;"	f
declaredLocally	symbolTable.c	/^int declaredLocally(char* symbolName)$/;"	f
delayed_branches	spim/spim/spim.c	/^bool delayed_branches;		\/* => simulate delayed branches *\/$/;"	v
delayed_loads	spim/spim/spim.c	/^bool delayed_loads;		\/* => simulate delayed loads *\/$/;"	v
delete_all_breakpoints	spim/CPU/spim-utils.c	/^delete_all_breakpoints ()$/;"	f	file:
delete_breakpoint	spim/CPU/spim-utils.c	/^delete_breakpoint (mem_addr addr)$/;"	f
dim_decl	parser.y	/^dim_decl	: MK_LB cexpr MK_RB$/;"	l
dim_fn	parser.y	/^dim_fn		: MK_LB expr_null MK_RB$/;"	l
dim_list	parser.y	/^dim_list	: dim_list MK_LB expr MK_RB$/;"	l
dimension	symbolTable.h	/^    int dimension;$/;"	m	struct:ArrayProperties
do_syscall	spim/CPU/syscall.c	/^do_syscall ()$/;"	f
elementType	symbolTable.h	/^    DATA_TYPE elementType;$/;"	m	struct:ArrayProperties
empty_pos	spim/CPU/string-stream.h	/^  int empty_pos;		\/* Index  of empty char in stream*\/$/;"	m	struct:str_stm
enable_data_alignment	spim/CPU/data.c	/^enable_data_alignment ()$/;"	f
encoding	spim/CPU/inst.h	/^  int32 encoding;$/;"	m	struct:inst_s
end_of_assembly_file	spim/CPU/data.c	/^end_of_assembly_file ()$/;"	f
enterIntoHashTrain	symbolTable.c	/^void enterIntoHashTrain(int hashIndex, SymbolTableEntry* entry)$/;"	f
enterSymbol	symbolTable.c	/^SymbolTableEntry* enterSymbol(char* symbolName, SymbolAttribute* attribute)$/;"	f
environ	spim/CPU/spim-utils.c	269;"	d	file:
error	spim/spim/spim.c	/^error (char *fmt, ...)$/;"	f
eval_imm_expr	spim/CPU/inst.c	/^eval_imm_expr (imm_expr *expr)$/;"	f
evaluateExprValue	semanticAnalysis.c	/^void evaluateExprValue(AST_NODE* exprNode)$/;"	f
exception_file_name	spim/spim/spim.c	/^char *exception_file_name = DEFAULT_EXCEPTION_HANDLER;$/;"	v
exception_occurred	spim/CPU/spim-utils.c	/^int exception_occurred;$/;"	v
expand_data	spim/CPU/mem.c	/^expand_data (int addl_bytes)$/;"	f
expand_k_data	spim/CPU/mem.c	/^expand_k_data (int addl_bytes)$/;"	f
expand_stack	spim/CPU/mem.c	/^expand_stack (int addl_bytes)$/;"	f
expr	parser.y	/^expr		: expr add_op term$/;"	l
expr	spim/CPU/inst.h	/^  imm_expr *expr;$/;"	m	struct:inst_s
exprSemanticValue	header.h	/^            EXPRSemanticValue exprSemanticValue;$/;"	m	union:AST_NODE::__anon14
expr_null	parser.y	/^expr_null	:expr$/;"	l
extern_directive	spim/CPU/data.c	/^extern_directive (char *name, int size)$/;"	f
f	codeGen.c	/^FILE *f;$/;"	v
f	spim/CPU/dump_ops.c	/^    } f;$/;"	m	union:inst_t::__anon7	typeref:struct:inst_t::__anon7::__anon8	file:
f	spim/CPU/spim.h	/^typedef union {int i; FILE* f;} port;$/;"	m	union:__anon10
fValue	header.h	/^        float fValue;$/;"	m	union:EXPRSemanticValue::__anon11
factor	parser.y	/^factor		: MK_LPAREN relop_expr MK_RPAREN$/;"	l
fatal_error	spim/spim/spim.c	/^fatal_error (char *fmt, ...)$/;"	f
find_symbol_address	spim/CPU/sym-tbl.c	/^find_symbol_address (char *symbol)$/;"	f
flex_int16_t	lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flush_local_labels	spim/CPU/sym-tbl.c	/^flush_local_labels (int issue_undef_warnings)$/;"	f
flush_to_newline	spim/spim/spim.c	/^flush_to_newline ()$/;"	f	file:
force_break	spim/CPU/run.c	/^bool force_break = false;	\/* For the execution env. to force an execution break *\/$/;"	v
format_an_inst	spim/CPU/inst.c	/^format_an_inst (str_stream *ss, instruction *inst, mem_addr addr)$/;"	f
format_data_segs	spim/CPU/display-utils.c	/^format_data_segs (str_stream *ss)$/;"	f
format_imm_expr	spim/CPU/inst.c	/^format_imm_expr (str_stream *ss, imm_expr *expr, int base_reg)$/;"	f	file:
format_insts	spim/CPU/display-utils.c	/^format_insts (str_stream *ss, mem_addr from, mem_addr to)$/;"	f
format_mem	spim/CPU/display-utils.c	/^format_mem (str_stream *ss, mem_addr from, mem_addr to)$/;"	f
format_partial_line	spim/CPU/display-utils.c	/^format_partial_line (str_stream *ss, mem_addr addr)$/;"	f	file:
format_registers	spim/CPU/display-utils.c	/^format_registers (str_stream *ss, int print_gpr_hex, int print_fpr_hex)$/;"	f
free_inst	spim/CPU/inst.c	/^free_inst (instruction *inst)$/;"	f
free_instructions	spim/CPU/mem.c	/^free_instructions (instruction **inst, int n)$/;"	f	file:
funct	spim/CPU/dump_ops.c	/^      unsigned int funct:6;$/;"	m	struct:inst_t::__anon7::__anon8	file:
functionSignature	symbolTable.h	/^        FunctionSignature* functionSignature;$/;"	m	union:SymbolAttribute::__anon16
function_decl	parser.y	/^function_decl	: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE$/;"	l
function_head	parser.y	/^function_head   : type ID$/;"	l
fval	header.h	/^		double  fval;$/;"	m	union:CON_Type::__anon13
g1	pattern/assign.c	/^int g1;$/;"	v
g10	pattern/assign.c	/^FLOATA g10;$/;"	v
g2	pattern/assign.c	/^float g2;$/;"	v
g3	pattern/assign.c	/^INT g3;$/;"	v
g4	pattern/assign.c	/^FLOAT g4;$/;"	v
g5	pattern/assign.c	/^int g5[2];$/;"	v
g6	pattern/assign.c	/^float g6[2];$/;"	v
g7	pattern/assign.c	/^INT g7[2];$/;"	v
g8	pattern/assign.c	/^FLOAT g8[2];$/;"	v
g9	pattern/assign.c	/^INTA g9;$/;"	v
g_anyErrorOccur	semanticAnalysis.c	/^int g_anyErrorOccur = 0;$/;"	v
genCondition	codeGen.c	/^int genCondition(AST_NODE *node){$/;"	f
genDeclareNode	codeGen.c	/^void genDeclareNode(AST_NODE *node){$/;"	f
genGeneralNode	codeGen.c	/^void genGeneralNode(AST_NODE *node){$/;"	f
genGeneralNodeWithSibling	codeGen.c	/^void genGeneralNodeWithSibling(AST_NODE *node){$/;"	f
genIfStmt	codeGen.c	/^void genIfStmt(AST_NODE *node){$/;"	f
genReturnStmt	codeGen.c	/^void genReturnStmt(AST_NODE *node){$/;"	f
genStmtNode	codeGen.c	/^void genStmtNode(AST_NODE *node){$/;"	f
genVariableWithInit	gen-part.cpp	/^void genVariableWithInit(bool first, C_type c, const char* name, int a, double d) {$/;"	f
gen_epilogue	gen-part.cpp	/^void gen_epilogue(const char *functionName, int offset) {$/;"	f
gen_head	gen-part.cpp	/^int gen_head(const char *name) {$/;"	f
gen_prologue	gen-part.cpp	/^void gen_prologue(const char *functionName) {$/;"	f
getBiggerType	semanticAnalysis.c	/^DATA_TYPE getBiggerType(DATA_TYPE dataType1, DATA_TYPE dataType2)$/;"	f
getBinaryOp	header.h	/^        BINARY_OPERATOR getBinaryOp() {$/;"	f	class:AST_NODE
getCharPtrValue	header.h	/^        char* getCharPtrValue() {$/;"	f	class:AST_NODE
getConFloatValue	header.h	/^        double getConFloatValue() {$/;"	f	class:AST_NODE
getConIntValue	header.h	/^        int getConIntValue() {$/;"	f	class:AST_NODE
getConType	header.h	/^        C_type getConType() {$/;"	f	class:AST_NODE
getDataType	header.h	/^        DATA_TYPE getDataType() {$/;"	f	class:AST_NODE
getDeclKind	header.h	/^        DECL_KIND getDeclKind() {$/;"	f	class:AST_NODE
getEndTag	codeGen.h	/^    const char* getEndTag(AST_NODE *node){$/;"	f	class:TagSystem
getExprKind	header.h	/^        EXPR_KIND getExprKind() {$/;"	f	class:AST_NODE
getExprOrConstValue	semanticAnalysis.c	/^void getExprOrConstValue(AST_NODE* exprOrConstNode, int* iValue, float* fValue)$/;"	f
getIDKind	header.h	/^        IDENTIFIER_KIND getIDKind() {$/;"	f	class:AST_NODE
getIDName	header.h	/^        const char* getIDName() {$/;"	f	class:AST_NODE
getReg	gen-part.cpp	/^int getReg() {$/;"	f
getStmtType	header.h	/^        STMT_KIND getStmtType(){$/;"	f	class:AST_NODE
getTag	codeGen.h	/^    const char* getTag(AST_NODE *node) {$/;"	f	class:TagSystem
get_console_char	spim/spim/spim.c	/^get_console_char ()$/;"	f
get_hash	spim/CPU/sym-tbl.c	/^get_hash (char *name, int *slot_no, label **entry)$/;"	f	file:
get_opt_int	spim/spim/spim.c	/^get_opt_int ()$/;"	f	file:
global_decl	parser.y	/^global_decl	: decl_list function_decl$/;"	l
global_decl_list	parser.y	/^global_decl_list: global_decl_list global_decl$/;"	l
global_flag	spim/CPU/sym-tbl.h	/^  unsigned global_flag : 1;	\/* Non-zero => declared global *\/$/;"	m	struct:lab
gp_flag	spim/CPU/sym-tbl.h	/^  unsigned gp_flag : 1;		\/* Non-zero => referenced off gp *\/$/;"	m	struct:lab
gp_midpoint	spim/CPU/mem.c	/^mem_addr gp_midpoint;		\/* Middle of $gp area *\/$/;"	v
handle_exception	spim/CPU/syscall.c	/^handle_exception ()$/;"	f
hashTable	symbolTable.h	/^    SymbolTableEntry* hashTable[HASH_TABLE_SIZE];$/;"	m	struct:SymbolTable
i	spim/CPU/spim.h	/^typedef union {int i; FILE* f;} port;$/;"	m	union:__anon10
i	spim/CPU/spim.h	/^typedef union {int i; void* p;} intptr_union;$/;"	m	union:__anon9
iValue	header.h	/^        int iValue;$/;"	m	union:EXPRSemanticValue::__anon11
i_opcode_tbl	spim/CPU/inst.c	/^static name_val_val i_opcode_tbl [] = {$/;"	v	file:
i_type_inst	spim/CPU/inst.c	/^i_type_inst (int opcode, int rt, int rs, imm_expr *expr)$/;"	f
i_type_inst_free	spim/CPU/inst.c	/^i_type_inst_free (int opcode, int rt, int rs, imm_expr *expr)$/;"	f
i_type_inst_full_word	spim/CPU/inst.c	/^i_type_inst_full_word (int opcode, int rt, int rs, imm_expr *expr,$/;"	f	file:
id_list	parser.y	/^id_list		: ID$/;"	l
identifierName	header.h	/^    char *identifierName;$/;"	m	struct:IdentifierSemanticValue
identifierSemanticValue	header.h	/^            IdentifierSemanticValue identifierSemanticValue;$/;"	m	union:AST_NODE::__anon14
ifCascade	codeGen.h	/^    int ifCascade;$/;"	m	class:TagSystem
ifScope	codeGen.h	/^    int ifScope;$/;"	m	class:TagSystem
imm	spim/CPU/inst.h	/^	      short imm;$/;"	m	union:inst_s::__anon2::__anon3::__anon4
imm	spim/CPU/inst.h	/^  imm_expr *imm;		\/* The immediate part *\/$/;"	m	struct:addrexpr
imm_expr	spim/CPU/inst.h	/^} imm_expr;$/;"	t	typeref:struct:immexpr
immexpr	spim/CPU/inst.h	/^typedef struct immexpr$/;"	s
in_kernel	spim/CPU/data.c	/^static bool in_kernel = 0;	\/* => data goes to kdata, not data *\/$/;"	v	file:
in_kernel	spim/CPU/inst.c	/^static bool in_kernel = 0;$/;"	v	file:
incr_expr_offset	spim/CPU/inst.c	/^incr_expr_offset (imm_expr *expr, int32 value)$/;"	f
increment_data_pc	spim/CPU/data.c	/^increment_data_pc (int delta)$/;"	f
increment_text_pc	spim/CPU/inst.c	/^increment_text_pc (int delta)$/;"	f
init_id	parser.y	/^init_id		: ID$/;"	l
init_id_list	parser.y	/^init_id_list	: init_id$/;"	l
initial_data_limit	spim/CPU/spim-utils.c	/^mem_addr initial_data_limit = DATA_LIMIT;$/;"	v
initial_data_size	spim/CPU/spim-utils.c	/^int initial_data_size = DATA_SIZE;$/;"	v
initial_k_data_limit	spim/CPU/spim-utils.c	/^mem_addr initial_k_data_limit = K_DATA_LIMIT;$/;"	v
initial_k_data_size	spim/CPU/spim-utils.c	/^int initial_k_data_size = K_DATA_SIZE;$/;"	v
initial_k_text_size	spim/CPU/spim-utils.c	/^int initial_k_text_size = K_TEXT_SIZE;$/;"	v
initial_stack_limit	spim/CPU/spim-utils.c	/^mem_addr initial_stack_limit = STACK_LIMIT;$/;"	v
initial_stack_size	spim/CPU/spim-utils.c	/^int initial_stack_size = STACK_SIZE;$/;"	v
initial_text_size	spim/CPU/spim-utils.c	/^int initial_text_size = TEXT_SIZE;$/;"	v
initializeSymbolTable	symbolTable.c	/^void initializeSymbolTable()$/;"	f
initialize_inst_tables	spim/CPU/inst.c	/^initialize_inst_tables ()$/;"	f
initialize_registers	spim/CPU/spim-utils.c	/^initialize_registers ()$/;"	f
initialize_run_stack	spim/CPU/spim-utils.c	/^initialize_run_stack (int argc, char **argv)$/;"	f
initialize_stack	spim/CPU/spim-utils.c	/^initialize_stack(const char *command_line)$/;"	f
initialize_symbol_table	spim/CPU/sym-tbl.c	/^initialize_symbol_table ()$/;"	f
initialize_world	spim/CPU/spim-utils.c	/^initialize_world (char* exception_file_names)$/;"	f
initialized	spim/CPU/string-stream.h	/^  int initialized;		\/* Stream initialized? *\/$/;"	m	struct:str_stm
inst	spim/CPU/dump_ops.c	/^} inst;$/;"	t	typeref:struct:inst_t	file:
inst	spim/CPU/spim-utils.c	/^  instruction *inst;$/;"	m	struct:bkptrec	file:
inst	spim/CPU/sym-tbl.h	/^  instruction *inst;		\/* NULL => Data, not code *\/$/;"	m	struct:lab_use
inst_cmp	spim/CPU/inst.c	/^inst_cmp (instruction *inst1, instruction *inst2)$/;"	f	file:
inst_decode	spim/CPU/inst.c	/^inst_decode (int32 val)$/;"	f
inst_encode	spim/CPU/inst.c	/^inst_encode (instruction *inst)$/;"	f
inst_is_breakpoint	spim/CPU/inst.c	/^inst_is_breakpoint (mem_addr addr)$/;"	f
inst_s	spim/CPU/inst.h	/^typedef struct inst_s$/;"	s
inst_t	spim/CPU/dump_ops.c	/^typedef struct inst_t$/;"	s	file:
inst_to_string	spim/CPU/inst.c	/^inst_to_string(mem_addr addr)$/;"	f
instruction	spim/CPU/inst.h	/^} instruction;$/;"	t	typeref:struct:inst_s
int32	spim/CPU/spim.h	/^typedef int int32;$/;"	t
int_reg_names	spim/CPU/display-utils.c	/^char* int_reg_names[32] =$/;"	v
intptr_union	spim/CPU/spim.h	/^typedef union {int i; void* p;} intptr_union;$/;"	t	typeref:union:__anon9
intval	header.h	/^		int     intval;$/;"	m	union:CON_Type::__anon13
isConstEval	header.h	/^    int isConstEval;$/;"	m	struct:EXPRSemanticValue
is_zero_imm	spim/CPU/inst.c	/^is_zero_imm (imm_expr *expr)$/;"	f
j_type_inst	spim/CPU/inst.c	/^j_type_inst (int opcode, imm_expr *target)$/;"	f
k	pattern/func.c	/^int k;$/;"	v
k_data_begins_at_point	spim/CPU/data.c	/^k_data_begins_at_point (mem_addr addr)$/;"	f
k_data_seg	spim/CPU/mem.c	/^mem_word *k_data_seg;$/;"	v
k_data_seg_b	spim/CPU/mem.c	/^BYTE_TYPE *k_data_seg_b;$/;"	v
k_data_seg_h	spim/CPU/mem.c	/^short *k_data_seg_h;$/;"	v
k_data_size_limit	spim/CPU/mem.c	/^static int32 data_size_limit, stack_size_limit, k_data_size_limit;$/;"	v	file:
k_data_top	spim/CPU/mem.c	/^mem_addr k_data_top;$/;"	v
k_text_begins_at_point	spim/CPU/inst.c	/^k_text_begins_at_point (mem_addr addr)$/;"	f
k_text_seg	spim/CPU/mem.c	/^instruction **k_text_seg;$/;"	v
k_text_top	spim/CPU/mem.c	/^mem_addr k_text_top;$/;"	v
kind	header.h	/^    DECL_KIND kind;$/;"	m	struct:DECLSemanticValue
kind	header.h	/^    EXPR_KIND kind;$/;"	m	struct:EXPRSemanticValue
kind	header.h	/^    IDENTIFIER_KIND kind;$/;"	m	struct:IdentifierSemanticValue
kind	header.h	/^    STMT_KIND kind;$/;"	m	struct:STMTSemanticValue
kind	symbolTable.h	/^    TypeDescriptorKind kind;$/;"	m	struct:TypeDescriptor
lab	spim/CPU/sym-tbl.h	/^typedef struct lab$/;"	s
lab_use	spim/CPU/sym-tbl.h	/^typedef struct lab_use$/;"	s
label	spim/CPU/sym-tbl.h	/^} label;			\/* label that has not yet been defined *\/$/;"	t	typeref:struct:lab
label_hash_table	spim/CPU/sym-tbl.c	/^static label *label_hash_table [LABEL_HASH_TABLE_SIZE];$/;"	v	file:
label_is_defined	spim/CPU/sym-tbl.c	/^label_is_defined (char *name)$/;"	f
label_use	spim/CPU/sym-tbl.h	/^} label_use;$/;"	t	typeref:struct:lab_use
lcomm_directive	spim/CPU/data.c	/^lcomm_directive (char *name, int size)$/;"	f
leftmostSibling	header.h	/^        struct AST_NODE *leftmostSibling;$/;"	m	class:AST_NODE	typeref:struct:AST_NODE::AST_NODE
lexeme	parser.tab.c	/^	char *lexeme;$/;"	m	union:YYSTYPE	file:
lexeme	parser.tab.h	/^	char *lexeme;$/;"	m	union:YYSTYPE
linenumber	header.h	/^        int linenumber;$/;"	m	class:AST_NODE
linenumber	parser.tab.c	/^int linenumber = 1;$/;"	v
list_breakpoints	spim/CPU/spim-utils.c	/^list_breakpoints ()$/;"	f
load_exception_handler	spim/spim/spim.c	/^static bool load_exception_handler = true;$/;"	v	file:
local_labels	spim/CPU/sym-tbl.c	/^static label *local_labels = NULL; \/* Labels local to current file. *\/$/;"	v	file:
lookup_label	spim/CPU/sym-tbl.c	/^lookup_label (char *name)$/;"	f
lower_bits_of_expr	spim/CPU/inst.c	/^lower_bits_of_expr (imm_expr *old_expr)$/;"	f
main	parser.tab.c	/^int main (int argc, char *argv[]){$/;"	f
main	pattern/assign.c	/^int main() {$/;"	f
main	pattern/control.c	/^int main() {$/;"	f
main	pattern/expr.c	/^int main() {$/;"	f
main	pattern/func.c	/^int main() {$/;"	f
main	pattern/io.c	/^int main() {$/;"	f
main	pattern/test.c	/^int main(){$/;"	f
main	spim/CPU/dump_ops.c	/^main (int argc, char** argv)$/;"	f
main	spim/spim/spim.c	/^main (int argc, char **argv)$/;"	f
makeChild	parser.tab.c	/^static inline AST_NODE* makeChild(AST_NODE *parent, AST_NODE *child)$/;"	f	file:
makeDeclNode	parser.tab.c	/^static inline AST_NODE* makeDeclNode(DECL_KIND declKind)$/;"	f	file:
makeExprNode	parser.tab.c	/^static inline AST_NODE* makeExprNode(EXPR_KIND exprKind, int operationEnumValue)$/;"	f	file:
makeFamily	parser.tab.c	/^static AST_NODE* makeFamily(AST_NODE *parent, int childrenCount, ...)$/;"	f	file:
makeIDNode	parser.tab.c	/^static inline AST_NODE* makeIDNode(char *lexeme, IDENTIFIER_KIND idKind)$/;"	f	file:
makeSibling	parser.tab.c	/^static inline AST_NODE* makeSibling(AST_NODE *a, AST_NODE *b)$/;"	f	file:
makeStmtNode	parser.tab.c	/^static inline AST_NODE* makeStmtNode(STMT_KIND stmtKind)$/;"	f	file:
make_addr_expr	spim/CPU/inst.c	/^make_addr_expr (int offs, char *sym, int reg_no)$/;"	f
make_imm_expr	spim/CPU/inst.c	/^make_imm_expr (int offs, char *sym, bool is_pc_relative)$/;"	f
make_label_global	spim/CPU/sym-tbl.c	/^make_label_global (char *name)$/;"	f
make_memory	spim/CPU/mem.c	/^make_memory (int text_size, int data_size, int data_limit,$/;"	f
make_r_type_inst	spim/CPU/inst.c	/^make_r_type_inst (int opcode, int rd, int rs, int rt)$/;"	f	file:
map_int_to_name_val_val	spim/CPU/spim-utils.c	/^map_int_to_name_val_val (name_val_val tbl[], int tbl_len, int num)$/;"	f
map_string_to_name_val_val	spim/CPU/spim-utils.c	/^map_string_to_name_val_val (name_val_val tbl[], int tbl_len, char *id)$/;"	f
mapped_io	spim/spim/spim.c	/^bool mapped_io;			\/* => activate memory-mapped IO *\/$/;"	v
max_length	spim/CPU/string-stream.h	/^  int max_length;		\/* Length of buffer *\/$/;"	m	struct:str_stm
mcexpr	parser.y	/^mcexpr		: mcexpr OP_TIMES cfactor$/;"	l
mem_addr	spim/CPU/spim.h	/^typedef uint32 \/*@alt int @*\/ mem_addr;$/;"	t
mem_reference	spim/CPU/mem.c	/^mem_reference(mem_addr addr)$/;"	f
mem_word	spim/CPU/mem.h	/^typedef int32 \/*@alt unsigned int @*\/ mem_word;$/;"	t
memclr	spim/CPU/spim.h	81;"	d
memclr	spim/CPU/spim.h	85;"	d
memcmp	spim/CPU/spim.h	82;"	d
memcpy	spim/CPU/spim.h	80;"	d
message_out	spim/spim/spim.c	/^port message_out, console_out, console_in;$/;"	v
mk_i_inst	spim/CPU/inst.c	/^mk_i_inst (int32 val, int opcode, int rs, int rt, int offset)$/;"	f	file:
mk_j_inst	spim/CPU/inst.c	/^mk_j_inst (int32 val, int opcode, int target)$/;"	f	file:
mk_r_inst	spim/CPU/inst.c	/^mk_r_inst (int32 val, int opcode, int rs, int rt, int rd, int shamt)$/;"	f	file:
mul_op	parser.y	/^mul_op		: OP_TIMES$/;"	l
nPC	spim/CPU/mem.c	/^mem_addr PC, nPC;$/;"	v
name	header.h	/^    const char* name() {$/;"	f	struct:IdentifierSemanticValue
name	spim/CPU/spim-utils.h	/^  char *name;$/;"	m	struct:__anon6
name	spim/CPU/sym-tbl.h	/^  char *name;			\/* Name of label *\/$/;"	m	struct:lab
name	symbolTable.h	/^    char* name;$/;"	m	struct:SymbolTableEntry
name_tbl	spim/CPU/inst.c	/^static name_val_val name_tbl [] = {$/;"	v	file:
name_val_val	spim/CPU/spim-utils.h	/^} name_val_val;$/;"	t	typeref:struct:__anon6
nestingLevel	symbolTable.h	/^    int nestingLevel;$/;"	m	struct:SymbolTableEntry
newSymbolTableEntry	symbolTable.c	/^SymbolTableEntry* newSymbolTableEntry(int nestingLevel)$/;"	f
next	spim/CPU/spim-utils.c	/^  struct bkptrec *next;$/;"	m	struct:bkptrec	typeref:struct:bkptrec::bkptrec	file:
next	spim/CPU/sym-tbl.h	/^  struct lab *next;		\/* Hash table link *\/$/;"	m	struct:lab	typeref:struct:lab::lab
next	spim/CPU/sym-tbl.h	/^  struct lab_use *next;$/;"	m	struct:lab_use	typeref:struct:lab_use::lab_use
next	symbolTable.h	/^    struct Parameter* next;$/;"	m	struct:Parameter	typeref:struct:Parameter::Parameter
nextInHashChain	symbolTable.h	/^    struct SymbolTableEntry* nextInHashChain;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
nextInSameLevel	symbolTable.h	/^    struct SymbolTableEntry* nextInSameLevel;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
next_data_pc	spim/CPU/data.c	/^static mem_addr next_data_pc;	\/* Location for next datum in user process *\/$/;"	v	file:
next_gp_item_addr	spim/CPU/data.c	/^static mem_addr next_gp_item_addr; \/* Address of next item accessed off $gp *\/$/;"	v	file:
next_k_data_pc	spim/CPU/data.c	/^static mem_addr next_k_data_pc;	\/* Location for next datum in kernel *\/$/;"	v	file:
next_k_text_pc	spim/CPU/inst.c	/^static mem_addr next_k_text_pc;$/;"	v	file:
next_local	spim/CPU/sym-tbl.h	/^  struct lab *next_local;	\/* Link in list of local labels *\/$/;"	m	struct:lab	typeref:struct:lab::lab
next_text_pc	spim/CPU/inst.c	/^static mem_addr next_text_pc;$/;"	v	file:
node	parser.tab.c	/^	AST_NODE  *node;$/;"	m	union:YYSTYPE	file:
node	parser.tab.h	/^	AST_NODE  *node;$/;"	m	union:YYSTYPE
nodeType	header.h	/^        AST_TYPE nodeType;$/;"	m	class:AST_NODE
nonempty_assign_expr_list	parser.y	/^nonempty_assign_expr_list        : nonempty_assign_expr_list MK_COMMA assign_expr$/;"	l
nonempty_relop_expr_list	parser.y	/^nonempty_relop_expr_list	: nonempty_relop_expr_list MK_COMMA relop_expr$/;"	l
notice	codeGen.h	/^    void notice(const TagSignal sig){$/;"	f	class:TagSystem
offset	spim/CPU/inst.h	/^  int offset;			\/* Offset from symbol *\/$/;"	m	struct:immexpr
ok_pc	spim/CPU/exceptions.s	/^ok_pc:$/;"	l
op	header.h	/^    } op;$/;"	m	struct:EXPRSemanticValue	typeref:union:EXPRSemanticValue::__anon12
op	spim/CPU/dump_ops.c	/^      unsigned int op:6;$/;"	m	struct:inst_t::__anon7::__anon8	file:
opcode	spim/CPU/dump_ops.c	/^  char *opcode;$/;"	m	struct:inst_t	file:
opcode	spim/CPU/inst.h	/^  short opcode;$/;"	m	struct:inst_s
opcode_is_branch	spim/CPU/inst.c	/^opcode_is_branch (int opcode)$/;"	f
opcode_is_jump	spim/CPU/inst.c	/^opcode_is_jump (int opcode)$/;"	f
opcode_is_load_store	spim/CPU/inst.c	/^opcode_is_load_store (int opcode)$/;"	f
opcode_is_nullified_branch	spim/CPU/inst.c	/^opcode_is_nullified_branch (int opcode)$/;"	f
opcode_is_true_branch	spim/CPU/inst.c	/^opcode_is_true_branch (int opcode)$/;"	f
openScope	symbolTable.c	/^void openScope()$/;"	f
ops	spim/CPU/dump_ops.c	/^inst ops [] = {$/;"	v
opt_param_list	parser.y	/^opt_param_list  : param_list$/;"	l
p	spim/CPU/spim.h	/^typedef union {int i; void* p;} intptr_union;$/;"	m	union:__anon9
pad	spim/CPU/dump_ops.c	/^      unsigned int pad:10;$/;"	m	struct:inst_t::__anon7::__anon8	file:
param	parser.y	/^param		: type ID$/;"	l
param_list	parser.y	/^param_list	: param_list MK_COMMA  param$/;"	l
parameterList	symbolTable.h	/^    Parameter* parameterList;$/;"	m	struct:FunctionSignature
parameterName	symbolTable.h	/^    char* parameterName;$/;"	m	struct:Parameter
parametersCount	symbolTable.h	/^    int parametersCount;$/;"	m	struct:FunctionSignature
parent	header.h	/^        struct AST_NODE *parent;$/;"	m	class:AST_NODE	typeref:struct:AST_NODE::AST_NODE
parse_spim_command	spim/spim/spim.c	/^parse_spim_command (FILE *file, bool redo)$/;"	f	file:
pc_relative	spim/CPU/inst.h	/^  bool pc_relative;		\/* => offset from label in code *\/$/;"	m	struct:immexpr
pipe_out	spim/spim/spim.c	/^int pipe_out;$/;"	v
port	spim/CPU/spim.h	/^typedef union {int i; FILE* f;} port;$/;"	t	typeref:union:__anon10
prevInHashChain	symbolTable.h	/^    struct SymbolTableEntry* prevInHashChain;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
printErrorMsg	semanticAnalysis.c	/^void printErrorMsg(AST_NODE* node, ErrorMsgKind errorMsgKind)$/;"	f
printErrorMsgSpecial	semanticAnalysis.c	/^void printErrorMsgSpecial(AST_NODE* node1, char* name2, ErrorMsgKind errorMsgKind)$/;"	f
printGV	functions.c	/^void printGV(AST_NODE *root, char* fileName)$/;"	f
printGVNode	functions.c	/^int printGVNode(FILE *fp, AST_NODE* node, int count)$/;"	f
printLabelString	functions.c	/^void printLabelString(FILE *fp, AST_NODE *astNode)$/;"	f
print_all_regs	spim/spim/spim.c	/^print_all_regs (int hex_flag)$/;"	f	file:
print_fp_reg	spim/spim/spim.c	/^print_fp_reg (int reg_no)$/;"	f	file:
print_inst	spim/CPU/inst.c	/^print_inst (mem_addr addr)$/;"	f
print_mem	spim/CPU/mem.c	/^print_mem (mem_addr addr)$/;"	f
print_reg	spim/spim/spim.c	/^print_reg (int reg_no)$/;"	f	file:
print_reg_from_string	spim/spim/spim.c	/^print_reg_from_string (char* reg_num)$/;"	f	file:
print_symbols	spim/CPU/sym-tbl.c	/^print_symbols ()$/;"	f
print_undefined_symbols	spim/CPU/sym-tbl.c	/^print_undefined_symbols ()$/;"	f
processBlockNode	semanticAnalysis.c	/^void processBlockNode(AST_NODE* blockNode)$/;"	f
processConstValueNode	semanticAnalysis.c	/^void processConstValueNode(AST_NODE* constValueNode)$/;"	f
processDeclDimList	semanticAnalysis.c	/^void processDeclDimList(AST_NODE* idNode, TypeDescriptor* typeDescriptor, int ignoreFirstDimSize)$/;"	f
processDeclarationNode	semanticAnalysis.c	/^void processDeclarationNode(AST_NODE* declarationNode)$/;"	f
processExprNode	semanticAnalysis.c	/^void processExprNode(AST_NODE* exprNode)$/;"	f
processExprRelatedNode	semanticAnalysis.c	/^void processExprRelatedNode(AST_NODE* exprRelatedNode)$/;"	f
processGeneralNode	semanticAnalysis.c	/^void processGeneralNode(AST_NODE *node)$/;"	f
processProgramNode	semanticAnalysis.c	/^void processProgramNode(AST_NODE *programNode)$/;"	f
processStmtNode	semanticAnalysis.c	/^void processStmtNode(AST_NODE* stmtNode)$/;"	f
processTypeNode	semanticAnalysis.c	/^void processTypeNode(AST_NODE* idNodeAsType)$/;"	f
processVariableLValue	semanticAnalysis.c	/^void processVariableLValue(AST_NODE* idNode)$/;"	f
processVariableRValue	semanticAnalysis.c	/^void processVariableRValue(AST_NODE* idNode)$/;"	f
produce_immediate	spim/CPU/inst.c	/^produce_immediate (imm_expr *expr, int rt, int value_known, int32 value)$/;"	f	file:
prog	parser.tab.c	/^AST_NODE *prog;$/;"	v
program	parser.y	/^program		: global_decl_list { $$=Allocate(PROGRAM_NODE);  makeChild($$,$1); prog=$$;}$/;"	l
program_argc	spim/spim/spim.c	/^static int program_argc;$/;"	v	file:
program_argv	spim/spim/spim.c	/^static char** program_argv;$/;"	v	file:
properties	symbolTable.h	/^    } properties;$/;"	m	struct:TypeDescriptor	typeref:union:TypeDescriptor::__anon15
put_console_char	spim/spim/spim.c	/^put_console_char (char c)$/;"	f
quiet	spim/spim/spim.c	/^bool quiet;			\/* => no warning messages *\/$/;"	v
r	spim/CPU/inst.h	/^		} r;$/;"	m	union:inst_s::__anon2::__anon3::__anon4	typeref:struct:inst_s::__anon2::__anon3::__anon4::__anon5
r_co_type_inst	spim/CPU/inst.c	/^r_co_type_inst (int opcode, int fd, int fs, int ft)$/;"	f
r_cond_type_inst	spim/CPU/inst.c	/^r_cond_type_inst (int opcode, int fs, int ft, int cc)$/;"	f
r_i	spim/CPU/inst.h	/^	    } r_i;$/;"	m	struct:inst_s::__anon2::__anon3	typeref:union:inst_s::__anon2::__anon3::__anon4
r_i	spim/CPU/inst.h	/^	} r_i;$/;"	m	union:inst_s::__anon2	typeref:struct:inst_s::__anon2::__anon3
r_sh_type_inst	spim/CPU/inst.c	/^r_sh_type_inst (int opcode, int rd, int rt, int shamt)$/;"	f
r_t	spim/CPU/inst.h	/^    } r_t;$/;"	m	struct:inst_s	typeref:union:inst_s::__anon2
r_type_inst	spim/CPU/inst.c	/^r_type_inst (int opcode, int rd, int rs, int rt)$/;"	f
raise_exception	spim/CPU/run.c	/^raise_exception (int excode)$/;"	f
rd	spim/CPU/inst.h	/^		  unsigned char rd;$/;"	m	struct:inst_s::__anon2::__anon3::__anon4::__anon5
read_assembly_command	spim/spim/spim.c	/^read_assembly_command ()$/;"	f	file:
read_assembly_file	spim/CPU/spim-utils.c	/^read_assembly_file (char *name)$/;"	f
read_input	spim/spim/spim.c	/^read_input (char *str, int str_size)$/;"	f
read_mem_byte	spim/CPU/mem.c	/^read_mem_byte(mem_addr addr)$/;"	f
read_mem_half	spim/CPU/mem.c	/^read_mem_half(mem_addr addr)$/;"	f
read_mem_inst	spim/CPU/mem.c	/^read_mem_inst(mem_addr addr)$/;"	f
read_mem_word	spim/CPU/mem.c	/^read_mem_word(mem_addr addr)$/;"	f
read_memory_mapped_IO	spim/CPU/mem.c	/^read_memory_mapped_IO (mem_addr addr)$/;"	f	file:
read_token	spim/spim/spim.c	/^read_token ()$/;"	f	file:
record_data_uses_symbol	spim/CPU/sym-tbl.c	/^record_data_uses_symbol (mem_addr location, label *sym)$/;"	f
record_inst_uses_symbol	spim/CPU/sym-tbl.c	/^record_inst_uses_symbol (instruction *inst, label *sym)$/;"	f
record_label	spim/CPU/sym-tbl.c	/^record_label (char *name, mem_addr address, int resolve_uses)$/;"	f
recv_buffer	spim/CPU/mem.c	/^static int recv_buffer;$/;"	v	file:
recv_buffer_full_timer	spim/CPU/mem.c	/^static int recv_buffer_full_timer = 0;$/;"	v	file:
recv_control	spim/CPU/mem.c	/^static int recv_control = 0;	\/* No input *\/$/;"	v	file:
reg_no	spim/CPU/inst.h	/^  unsigned char reg_no;		\/* Register number *\/$/;"	m	struct:addrexpr
reg_number	gen-part.cpp	/^int reg_number = 0;$/;"	v
reg_word	spim/CPU/reg.h	/^typedef int32 \/*@alt unsigned int @*\/ reg_word;$/;"	t
rel_op	parser.y	/^rel_op		: OP_EQ$/;"	l
relop_expr	parser.y	/^relop_expr	: relop_term$/;"	l
relop_expr_list	parser.y	/^relop_expr_list	: nonempty_relop_expr_list$/;"	l
relop_factor	parser.y	/^relop_factor	: expr$/;"	l
relop_term	parser.y	/^relop_term	: relop_factor$/;"	l
removeFromHashTrain	symbolTable.c	/^void removeFromHashTrain(int hashIndex, SymbolTableEntry* entry)$/;"	f
removeSymbol	symbolTable.c	/^void removeSymbol(char* symbolName)$/;"	f
resolve_a_label	spim/CPU/sym-tbl.c	/^resolve_a_label (label *sym, instruction *inst)$/;"	f
resolve_a_label_sub	spim/CPU/sym-tbl.c	/^resolve_a_label_sub (label *sym, instruction *inst, mem_addr pc)$/;"	f	file:
resolve_label_uses	spim/CPU/sym-tbl.c	/^resolve_label_uses (label *sym)$/;"	f
ret	spim/CPU/exceptions.s	/^ret:$/;"	l
retrieveSymbol	symbolTable.c	/^SymbolTableEntry* retrieveSymbol(char* symbolName)$/;"	f
returnType	symbolTable.h	/^    DATA_TYPE returnType;$/;"	m	struct:FunctionSignature
rightSibling	header.h	/^        struct AST_NODE *rightSibling;$/;"	m	class:AST_NODE	typeref:struct:AST_NODE::AST_NODE
rs	spim/CPU/dump_ops.c	/^      unsigned int rs:5;$/;"	m	struct:inst_t::__anon7::__anon8	file:
rs	spim/CPU/inst.h	/^	  unsigned char rs;$/;"	m	struct:inst_s::__anon2::__anon3
rt	spim/CPU/dump_ops.c	/^      unsigned int rt:5;$/;"	m	struct:inst_t::__anon7::__anon8	file:
rt	spim/CPU/inst.h	/^	  unsigned char rt;$/;"	m	struct:inst_s::__anon2::__anon3
run_error	spim/spim/spim.c	/^run_error (char *fmt, ...)$/;"	f
run_program	spim/CPU/spim-utils.c	/^run_program (mem_addr pc, int steps, bool display, bool cont_bkpt, bool* continuable)$/;"	f
run_spim	spim/CPU/run.c	/^run_spim (mem_addr initial_PC, int steps_to_run, bool display)$/;"	f
running_in_delay_slot	spim/CPU/run.c	/^static int running_in_delay_slot = 0;$/;"	v	file:
s1	spim/CPU/exceptions.s	/^s1:	.word 0$/;"	l
s2	spim/CPU/exceptions.s	/^s2:	.word 0$/;"	l
sameNameInOuterLevel	symbolTable.h	/^    struct SymbolTableEntry* sameNameInOuterLevel;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
saved_console_state	spim/spim/spim.c	/^static struct sgttyb saved_console_state;$/;"	v	typeref:struct:sgttyb	file:
saved_console_state	spim/spim/spim.c	/^static struct termios saved_console_state;$/;"	v	typeref:struct:termios	file:
sc	header.h	/^		char    *sc; $/;"	m	union:CON_Type::__anon13
scopeDisplay	symbolTable.h	/^    SymbolTableEntry** scopeDisplay;$/;"	m	struct:SymbolTable
scopeDisplayElementCount	symbolTable.h	/^    int scopeDisplayElementCount;$/;"	m	struct:SymbolTable
semanticAnalysis	semanticAnalysis.c	/^void semanticAnalysis(AST_NODE *root)$/;"	f
semantic_value	header.h	/^        } semantic_value;$/;"	m	class:AST_NODE	typeref:union:AST_NODE::__anon14
setDataType	header.h	/^        void setDataType(DATA_TYPE type){$/;"	f	class:AST_NODE
setSymbolTableEntry	header.h	/^        void setSymbolTableEntry(SymbolTableEntry *entry){$/;"	f	class:AST_NODE
set_breakpoint	spim/CPU/inst.c	/^set_breakpoint (mem_addr addr)$/;"	f
set_data_alignment	spim/CPU/data.c	/^set_data_alignment (int alignment)$/;"	f
set_data_pc	spim/CPU/data.c	/^set_data_pc (mem_addr addr)$/;"	f
set_fpu_cc	spim/CPU/run.c	/^set_fpu_cc (int cond, int cc, int less, int equal, int unordered)$/;"	f	file:
set_mem_byte	spim/CPU/mem.c	/^set_mem_byte(mem_addr addr, reg_word value)$/;"	f
set_mem_half	spim/CPU/mem.c	/^set_mem_half(mem_addr addr, reg_word value)$/;"	f
set_mem_inst	spim/CPU/mem.c	/^set_mem_inst(mem_addr addr, instruction* inst)$/;"	f
set_mem_word	spim/CPU/mem.c	/^set_mem_word(mem_addr addr, reg_word value)$/;"	f
set_text_pc	spim/CPU/inst.c	/^set_text_pc (mem_addr addr)$/;"	f
shamt	spim/CPU/inst.h	/^		  unsigned char shamt;$/;"	m	struct:inst_s::__anon2::__anon3::__anon4::__anon5
short	parser.tab.c	283;"	d	file:
signed_multiply	spim/CPU/run.c	/^signed_multiply (reg_word v1, reg_word v2)$/;"	f	file:
sizeInEachDimension	symbolTable.h	/^    int sizeInEachDimension[MAX_ARRAY_DIMENSION];$/;"	m	struct:ArrayProperties
sort_a_opcode_table	spim/CPU/inst.c	/^sort_a_opcode_table ()$/;"	f	file:
sort_i_opcode_table	spim/CPU/inst.c	/^sort_i_opcode_table ()$/;"	f	file:
sort_name_table	spim/CPU/inst.c	/^sort_name_table ()$/;"	f	file:
source_line	spim/CPU/inst.h	/^  char *source_line;$/;"	m	struct:inst_s
spim_return_value	spim/spim/spim.c	/^int spim_return_value;		\/* Value returned when spim exits *\/$/;"	v
spim_top_level_env	spim/spim/spim.c	/^jmp_buf spim_top_level_env;	\/* For ^C *\/$/;"	v
ss_clear	spim/CPU/string-stream.c	/^ss_clear (str_stream* ss)$/;"	f
ss_erase	spim/CPU/string-stream.c	/^ss_erase (str_stream* ss, int n)$/;"	f
ss_init	spim/CPU/string-stream.c	/^ss_init (str_stream* ss)$/;"	f
ss_length	spim/CPU/string-stream.c	/^ss_length (str_stream* ss)$/;"	f
ss_printf	spim/CPU/string-stream.c	/^ss_printf (str_stream* ss, char* fmt, ...)$/;"	f
ss_to_string	spim/CPU/string-stream.c	/^ss_to_string (str_stream* ss)$/;"	f
stack_bot	spim/CPU/mem.c	/^mem_addr stack_bot;$/;"	v
stack_seg	spim/CPU/mem.c	/^mem_word *stack_seg;$/;"	v
stack_seg_b	spim/CPU/mem.c	/^BYTE_TYPE *stack_seg_b;		\/* Ditto *\/$/;"	v
stack_seg_h	spim/CPU/mem.c	/^short *stack_seg_h;		\/* Points to same vector as STACK_SEG *\/$/;"	v
stack_size_limit	spim/CPU/mem.c	/^static int32 data_size_limit, stack_size_limit, k_data_size_limit;$/;"	v	file:
start_CP0_timer	spim/CPU/run.c	/^start_CP0_timer ()$/;"	f	file:
starting_address	spim/CPU/spim-utils.c	/^starting_address ()$/;"	f
stmt	parser.y	/^stmt		: MK_LBRACE block MK_RBRACE$/;"	l
stmtSemanticValue	header.h	/^            STMTSemanticValue stmtSemanticValue;$/;"	m	union:AST_NODE::__anon14
stmt_list	parser.y	/^stmt_list	: stmt_list stmt$/;"	l
store_byte	spim/CPU/data.c	/^store_byte (int value)$/;"	f
store_double	spim/CPU/data.c	/^store_double (double *value)$/;"	f
store_float	spim/CPU/data.c	/^store_float (double *value)$/;"	f
store_half	spim/CPU/data.c	/^store_half (int value)$/;"	f
store_instruction	spim/CPU/inst.c	/^store_instruction (instruction *inst)$/;"	f
store_string	spim/CPU/data.c	/^store_string (char *string, int length, bool null_terminate)$/;"	f
store_word	spim/CPU/data.c	/^store_word (int value)$/;"	f
str_copy	spim/CPU/spim-utils.c	/^str_copy (char *str)$/;"	f
str_prefix	spim/spim/spim.c	/^str_prefix (char *s1, char *s2, int min_match)$/;"	f	file:
str_stm	spim/CPU/string-stream.h	/^typedef struct str_stm$/;"	s
str_stream	spim/CPU/string-stream.h	/^} str_stream;$/;"	t	typeref:struct:str_stm
streq	spim/CPU/spim.h	56;"	d
strtol	spim/CPU/spim-utils.c	/^strtol (const char* str, const char** eptr, int base)$/;"	f
strtoul	spim/CPU/spim-utils.c	/^strtoul (const char* str, char** eptr, int base)$/;"	f
symbol	spim/CPU/inst.h	/^  struct lab *symbol;		\/* Symbolic label *\/$/;"	m	struct:immexpr	typeref:struct:immexpr::lab
symbolTable	symbolTable.c	/^SymbolTable symbolTable;$/;"	v
symbolTableEnd	symbolTable.c	/^void symbolTableEnd()$/;"	f
symbolTableEntry	header.h	/^    struct SymbolTableEntry *symbolTableEntry;$/;"	m	struct:IdentifierSemanticValue	typeref:struct:IdentifierSemanticValue::SymbolTableEntry
tag	codeGen.h	/^    char tag[1024];$/;"	m	class:TagSystem
tagState	codeGen.h	/^    enum tagState{$/;"	g	class:TagSystem
tagsystem	codeGen.c	/^TagSystem tagsystem;$/;"	v
target	spim/CPU/inst.h	/^      mem_addr target;$/;"	m	union:inst_s::__anon2
term	parser.y	/^term		: term mul_op factor$/;"	l
test	parser.y	/^test		: assign_expr$/;"	l
test_assembly	spim/CPU/inst.c	/^test_assembly (instruction *inst)$/;"	f
text_begins_at_point	spim/CPU/inst.c	/^text_begins_at_point (mem_addr addr)$/;"	f
text_modified	spim/CPU/mem.c	/^bool text_modified;		\/* => text segment was written *\/$/;"	v
text_seg	spim/CPU/mem.c	/^instruction **text_seg;$/;"	v
text_top	spim/CPU/mem.c	/^mem_addr text_top;$/;"	v
timer_completion_routine	spim/CPU/run.c	/^timer_completion_routine(LPVOID lpArgToCompletionRoutine, DWORD dwTimerLowValue, DWORD dwTimerHighValue)$/;"	f
top_level	spim/spim/spim.c	/^top_level ()$/;"	f	file:
trans_buffer	spim/CPU/mem.c	/^static int trans_buffer;$/;"	v	file:
trans_buffer_full_timer	spim/CPU/mem.c	/^static int trans_buffer_full_timer = 0;$/;"	v	file:
trans_control	spim/CPU/mem.c	/^static int trans_control = TRANS_READY;	\/* Ready to write *\/$/;"	v	file:
try	pattern/func.c	/^void try() {$/;"	f
type	header.h	/^        AST_TYPE type() {$/;"	f	class:AST_NODE
type	header.h	/^    C_type type() {$/;"	f	struct:CON_Type
type	parser.y	/^type		: INT$/;"	l
type	symbolTable.h	/^    TypeDescriptor* type;$/;"	m	struct:Parameter
typeDescriptor	symbolTable.h	/^        TypeDescriptor* typeDescriptor;$/;"	m	union:SymbolAttribute::__anon16
typeName	header.h	/^    char *typeName;$/;"	m	struct:TypeSpecSemanticValue
type_decl	parser.y	/^type_decl 	: TYPEDEF type id_list MK_SEMICOLON$/;"	l
u_reg_word	spim/CPU/reg.h	/^typedef uint32 u_reg_word;$/;"	t
uint32	spim/CPU/spim.h	/^typedef unsigned int  uint32;$/;"	t
unaryOp	header.h	/^        UNARY_OPERATOR unaryOp;$/;"	m	union:EXPRSemanticValue::__anon12
unaryOp	header.h	/^    UNARY_OPERATOR unaryOp() {$/;"	f	struct:EXPRSemanticValue
undefined_symbol_string	spim/CPU/sym-tbl.c	/^undefined_symbol_string ()$/;"	f
unput	lex.yy.c	188;"	d	file:
unsigned_multiply	spim/CPU/run.c	/^unsigned_multiply (reg_word v1, reg_word v2)$/;"	f	file:
upper_bits_of_expr	spim/CPU/inst.c	/^upper_bits_of_expr (imm_expr *old_expr)$/;"	f
user_kernel_data_segment	spim/CPU/data.c	/^user_kernel_data_segment (bool to_kernel)$/;"	f
user_kernel_text_segment	spim/CPU/inst.c	/^user_kernel_text_segment (bool to_kernel)$/;"	f
uses	spim/CPU/sym-tbl.h	/^  label_use *uses;		\/* List of instructions that reference *\/$/;"	m	struct:lab
value1	spim/CPU/spim-utils.h	/^  int value1;$/;"	m	struct:__anon6
value2	spim/CPU/spim-utils.h	/^  int value2;$/;"	m	struct:__anon6
var_decl	parser.y	/^var_decl	: type init_id_list MK_SEMICOLON$/;"	l
var_ref	parser.y	/^var_ref		: ID$/;"	l
vsprintf	spim/CPU/spim-utils.c	/^vsprintf (str, fmt, args)$/;"	f
write_assembled_code	spim/spim/spim.c	/^write_assembled_code(char* program_name)$/;"	f	file:
write_memory_mapped_IO	spim/CPU/mem.c	/^write_memory_mapped_IO (mem_addr addr, mem_word value)$/;"	f	file:
write_output	spim/spim/spim.c	/^write_output (port fp, char *fmt, ...)$/;"	f
write_startup_message	spim/CPU/spim-utils.c	/^write_startup_message ()$/;"	f
x	spim/CPU/dump_ops.c	/^    unsigned int x;$/;"	m	union:inst_t::__anon7	file:
xmalloc	spim/CPU/spim-utils.c	/^xmalloc (int size)$/;"	f
yy_accept	lex.yy.c	/^static yyconst flex_int16_t yy_accept[90] =$/;"	v	file:
yy_at_bol	lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	lex.yy.c	/^static yyconst flex_int16_t yy_base[93] =$/;"	v	file:
yy_bs_column	lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	lex.yy.c	/^static yyconst flex_int16_t yy_chk[167] =$/;"	v	file:
yy_create_buffer	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	lex.yy.c	/^static yyconst flex_int16_t yy_def[93] =$/;"	v	file:
yy_delete_buffer	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	lex.yy.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	lex.yy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	lex.yy.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	lex.yy.c	/^static yyconst flex_int32_t yy_meta[45] =$/;"	v	file:
yy_n_chars	lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	lex.yy.c	317;"	d	file:
yy_nxt	lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	lex.yy.c	/^static yyconst flex_int16_t yy_nxt[167] =$/;"	v	file:
yy_reduce_print	parser.tab.c	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f
yy_set_bol	lex.yy.c	329;"	d	file:
yy_set_interactive	lex.yy.c	319;"	d	file:
yy_size_t	lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	parser.tab.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	parser.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	parser.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	parser.tab.c	/^union yyalloc$/;"	u	file:
yychar	parser.tab.c	/^int yychar;$/;"	v
yycheck	parser.tab.c	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	parser.tab.c	839;"	d	file:
yyconst	lex.yy.c	106;"	d	file:
yyconst	lex.yy.c	108;"	d	file:
yydebug	parser.tab.c	/^int yydebug;$/;"	v
yydefact	parser.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	parser.tab.c	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	parser.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	parser.tab.c	838;"	d	file:
yyerror	parser.tab.c	/^int yyerror (char *mesg){$/;"	f
yyerror	parser.tab.c	/^void yyerror(const char *msg){$/;"	f
yyfree	lex.yy.c	/^void yyfree (void * ptr )$/;"	f
yyget_debug	lex.yy.c	/^int yyget_debug  (void)$/;"	f
yyget_in	lex.yy.c	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	lex.yy.c	/^int yyget_leng  (void)$/;"	f
yyget_lineno	lex.yy.c	/^int yyget_lineno  (void)$/;"	f
yyget_out	lex.yy.c	/^FILE *yyget_out  (void)$/;"	f
yyget_text	lex.yy.c	/^char *yyget_text  (void)$/;"	f
yyin	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	lex.yy.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	lex.yy.c	/^int yyleng;$/;"	v
yyless	lex.yy.c	175;"	d	file:
yyless	lex.yy.c	1845;"	d	file:
yyless	lex.yy.c	1846;"	d	file:
yylex_destroy	lex.yy.c	/^int yylex_destroy  (void)$/;"	f
yylineno	lex.yy.c	/^int yylineno = 1;$/;"	v
yylval	parser.tab.c	/^YYSTYPE yylval;$/;"	v
yylval_t	spim/CPU/scanner.h	/^typedef intptr_union yylval_t;$/;"	t
yymore	lex.yy.c	518;"	d	file:
yynerrs	parser.tab.c	/^int yynerrs;$/;"	v
yyout	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yypact	parser.tab.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	parser.tab.c	632;"	d	file:
yyparse	parser.tab.c	/^yyparse (void)$/;"	f
yypgoto	parser.tab.c	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state (void)$/;"	f
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	parser.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	parser.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrline	parser.tab.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyset_debug	lex.yy.c	/^void yyset_debug (int  bdebug )$/;"	f
yyset_in	lex.yy.c	/^void yyset_in (FILE *  in_str )$/;"	f
yyset_lineno	lex.yy.c	/^void yyset_lineno (int  line_number )$/;"	f
yyset_out	lex.yy.c	/^void yyset_out (FILE *  out_str )$/;"	f
yyss_alloc	parser.tab.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	parser.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	parser.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	parser.tab.c	1040;"	d	file:
yystrlen	parser.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	parser.tab.c	1024;"	d	file:
yysyntax_error	parser.tab.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	parser.tab.c	/^static const yytype_int16 yytable[] =$/;"	v	file:
yytable_value_is_error	parser.tab.c	637;"	d	file:
yyterminate	lex.yy.c	663;"	d	file:
yytext	lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	lex.yy.c	354;"	d	file:
yytname	parser.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	parser.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	parser.tab.c	/^  enum yytokentype$/;"	g	file:
yytokentype	parser.tab.h	/^  enum yytokentype$/;"	g
yytoknum	parser.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	parser.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	parser.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	parser.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	parser.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	parser.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	parser.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	parser.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	parser.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	parser.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	lex.yy.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yyvs_alloc	parser.tab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
zmalloc	spim/CPU/spim-utils.c	/^zmalloc (int size)$/;"	f
